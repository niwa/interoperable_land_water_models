{
  "$type": "Models.Core.Simulations, Models",
  "ExplorerWidth": 300,
  "Version": 58,
  "Name": "Simulations",
  "Children": [
    {
      "$type": "Models.Memo, Models",
      "Text": "\r\n## General Description \n\r\nThis is a base simulation that can be used describe multi-year rotations of crops, pasture+crops, or only pasture.  It is meant to be modified by an external tool (ApsimHandler), thence being adapted to simulate a more especific system/situation.  The modifications allowed include changing the start and end dates, location (weather data), irrigation and fertiliser management, the presence of pasture, the harvest management for pasture , and the number and type of crops.  Soil type is yet to be implemented.  \nThe newly created simulation is named 'ModifiedSimulation.apsimx'.  \r\n",
      "Name": "Description",
      "Children": [],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Replacements, Models",
      "Name": "Replacements",
      "Children": [
        {
          "$type": "Models.PMF.Plant, Models",
          "CropType": "FieldPea",
          "IsEnding": false,
          "DaysAfterEnding": 0,
          "ResourceName": null,
          "Name": "FieldPea",
          "Children": [
            {
              "$type": "Models.Memo, Models",
              "Text": "\r\n## References  \r\n\r\n### **Ayaz S, McKenzie BA, McNeil DL, Hill GD.2004**. Light interception and utilization of four grain legumes sown at different plant populations and depths. _Journal of Agricultural Science,_**142**: 297-308.  \r\n **Ayaz S, McKenzie BA, Hill GD, McNeil DL.2004**. Variability in yield of four grain legume species in a subhumid temperate environment. II. Yield components. _Journal of Agricultural Science,_**142**: 21-28.  \r\n **Ayaz S, McKenzie BA, Hill GD, McNeil DL.2004**. Nitrogen distribution in four grain legumes. _Journal of Agricultural Science,_**142**: 309-317.  \r\n **Wilson DR, Robertson MJ.1996.**Pea phenology responses to temperature and photoperiod. _Australian Agronomy Society_.",
              "Name": "Memo1",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.OrganArbitrator, Models",
              "Name": "Arbitrator",
              "Children": [
                {
                  "$type": "Models.PMF.RelativeAllocation, Models",
                  "Name": "NArbitrator",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.RelativeAllocation, Models",
                  "Name": "DMArbitrator",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Phen.Phenology, Models",
              "Name": "Phenology",
              "Children": [
                {
                  "$type": "Models.Functions.AirTemperatureFunction, Models",
                  "Name": "ThermalTime",
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        4.5,
                        30.0,
                        40.0
                      ],
                      "Y": [
                        0.0,
                        25.5,
                        0.0
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhotoperiodFunction, Models",
                  "Twilight": -6.0,
                  "DayLength": 0.0,
                  "Name": "Photoperiod",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GerminatingPhase, Models",
                  "Start": "Sowing",
                  "End": "Germination",
                  "Name": "Germinating",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.EmergingPhase, Models",
                  "ShootLag": 15.0,
                  "ShootRate": 5.0,
                  "Start": "Germination",
                  "End": "Emergence",
                  "TTForTimeStep": 0.0,
                  "Name": "Emerging",
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "ThermalTime",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "ThermalTime1",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.NodeNumberPhase, Models",
                  "Start": "Emergence",
                  "End": "StartFlowering",
                  "Name": "Vegetative",
                  "Children": [
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Phenology].Photoperiod.Value()",
                      "Name": "CompletionNodeNumber",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            13.0,
                            16.0
                          ],
                          "Y": [
                            18.0,
                            15.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "ThermalTime",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.NodeNumberPhase, Models",
                  "Start": "StartFlowering",
                  "End": "EndFlowering",
                  "Name": "Flowering",
                  "Children": [
                    {
                      "$type": "Models.Functions.AddFunction, Models",
                      "Name": "CompletionNodeNumber",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Phenology].NFF.Value()",
                          "Name": "VegetativeNodes",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.LinearInterpolationFunction, Models",
                          "XProperty": "[Phenology].Photoperiod.Value()",
                          "Name": "FloweringNodes",
                          "Children": [
                            {
                              "$type": "Models.Functions.XYPairs, Models",
                              "X": [
                                13.0,
                                16.0
                              ],
                              "Y": [
                                10.0,
                                7.0
                              ],
                              "Name": "XYPairs",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Target",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.Value()",
                          "Name": "NodeNumberDuration",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Structure].Phyllochron.Value()",
                          "Name": "Phyllochron",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "ThermalTime",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "EndFlowering",
                  "End": "EndGrainFill",
                  "Name": "GrainFilling",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 500.0,
                      "Units": null,
                      "Name": "Target",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "Progression",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "EndGrainFill",
                  "End": "Maturity",
                  "Name": "Maturing",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 60.0,
                      "Units": null,
                      "Name": "Target",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "Progression",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.GenericPhase, Models",
                  "Start": "Maturity",
                  "End": "HarvestRipe",
                  "Name": "Ripening",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "Target",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "Progression",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Phen.EndPhase, Models",
                  "Start": "HarvestRipe",
                  "End": "Unused",
                  "Name": "ReadyForHarvesting",
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].ThermalTime.Value()",
                      "Name": "ThermalTime",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.OnEventFunction, Models",
                  "SetEvent": "StartFlowering",
                  "ReSetEvent": "never",
                  "Name": "NFF",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "PreEventValue",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Phenology].Vegetative.CompletionNodeNumber.Value()",
                      "Name": "PostEventValue",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.OnEventFunction, Models",
                  "SetEvent": "EndFlowering",
                  "ReSetEvent": "never",
                  "Name": "FN",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "PreEventValue",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.SubtractFunction, Models",
                      "Name": "PostEventValue",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Structure].LeafTipsAppeared",
                          "Name": "PostEventValue",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Phenology].NFF.Value()",
                          "Name": "PostEventValue1",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Struct.Structure, Models",
              "CohortInitialisationStage": "Germination",
              "LeafInitialisationStage": "Emergence",
              "Name": "Structure",
              "Children": [
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Phenology].ThermalTime.Value()",
                  "Name": "ThermalTime",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "DroughtInducedBranchMortality",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 40.0,
                  "Units": null,
                  "Name": "FinalLeafNumber",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "XProperty": "[Stem].Live.Wt",
                  "Name": "HeightModel",
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        300.0
                      ],
                      "Y": [
                        10.0,
                        750.0
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "BranchingRate",
                  "Children": [
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Structure].LeafTipsAppeared",
                      "Name": "Potential_Branching_Rate",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            4.0,
                            5.0,
                            7.0,
                            8.0
                          ],
                          "Y": [
                            0.0,
                            0.0,
                            1.0,
                            1.0,
                            0.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[leaf].CoverGreen",
                      "Name": "Cover_response",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            0.17,
                            0.25
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            0.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Stem].Live.StorageWt",
                      "Name": "CHO_response",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            1.0,
                            10.0
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo1",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "BranchMortality",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseLookup, Models",
                  "Name": "Phyllochron",
                  "Children": [
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "Emergence",
                      "End": "StartFlowering",
                      "Name": "Vegetative",
                      "Children": [
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 30.0,
                          "Units": null,
                          "Name": "Function",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "StartFlowering",
                      "End": "EndFlowering",
                      "Name": "Flowering",
                      "Children": [
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 40.0,
                          "Units": null,
                          "Name": "Function",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "StemSenescenceAge",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.ReproductiveOrgan, Models",
              "GrowthRespiration": 0.0,
              "MaintenanceRespiration": 0.0,
              "DMDemand": null,
              "NDemand": null,
              "DMSupply": null,
              "NSupply": null,
              "RipeStage": null,
              "potentialDMAllocation": null,
              "Live": {
                "$type": "Models.PMF.Biomass, Models",
                "DMDOfStructural": 0.6,
                "Name": "Biomass",
                "Children": [],
                "IncludeInDocumentation": true,
                "Enabled": true,
                "ReadOnly": false
              },
              "Dead": {
                "$type": "Models.PMF.Biomass, Models",
                "DMDOfStructural": 0.6,
                "Name": "Biomass",
                "Children": [],
                "IncludeInDocumentation": true,
                "Enabled": true,
                "ReadOnly": false
              },
              "Name": "Grain",
              "Children": [
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": null,
                  "Name": "MaximumPotentialGrainSize",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseLookup, Models",
                  "Name": "DMDemandFunction",
                  "Children": [
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "StartFlowering",
                      "End": "EndGrainFill",
                      "Name": "GrainFilling",
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.FillingRateFunction, Models",
                          "Name": "FillingRateFunction",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Grain].NumberFunction.Value()",
                              "Name": "NumberFunction",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.AddFunction, Models",
                              "Name": "FillingDuration",
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Phenology].GrainFilling.Target.Value()",
                                  "Name": "FillingDuration",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Phenology].GrainFilling.Target.Value()",
                                  "Name": "FillingDuration1",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].ThermalTime.Value()",
                              "Name": "ThermalTime",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Grain].MaximumPotentialGrainSize.Value()",
                              "Name": "PotentialSizeIncrement",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.02,
                  "Units": null,
                  "Name": "MinimumNConc",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.03,
                  "Units": null,
                  "Name": "MaximumNConc",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.12,
                  "Units": null,
                  "Name": "WaterContent",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseLookup, Models",
                  "Name": "NFillingRate",
                  "Children": [
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "StartFlowering",
                      "End": "EndGrainFill",
                      "Name": "GrainFilling",
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.FillingRateFunction, Models",
                          "Name": "FillingRateFunction",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Grain].NumberFunction.Value()",
                              "Name": "NumberFunction",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.AddFunction, Models",
                              "Name": "FillingDuration",
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Phenology].Flowering.Target.Value()",
                                  "Name": "FillingDuration",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Phenology].GrainFilling.Target.Value()",
                                  "Name": "FillingDuration1",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].ThermalTime.Value()",
                              "Name": "ThermalTime",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.MultiplyFunction, Models",
                              "Name": "PotentialSizeIncrement",
                              "Children": [
                                {
                                  "$type": "Models.Functions.Constant, Models",
                                  "FixedValue": 0.04,
                                  "Units": null,
                                  "Name": "MaximumFinalNConc",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Grain].MaximumPotentialGrainSize.Value()",
                                  "Name": "MaximumSize",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "NumberFunction",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 3.0,
                      "Units": null,
                      "Name": "PeasPerPod",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Shell].PodNumber.Value()",
                      "Name": "PodNumber",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "Name": "BiomassRemovalDefaults",
                  "Children": [
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 1.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.0,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Harvest",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 1.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.0,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Cut",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.8,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Prune",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.6,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.2,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Graze",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": null,
                  "Name": "DMConversionEfficiency",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": null,
                  "Name": "CarbonConcentration",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.Root, Models",
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "GrowthRespiration": 0.0,
              "MaintenanceRespiration": 0.0,
              "RootAngle": 45.0,
              "SWAvailabilityRatio": 0.0,
              "Name": "Root",
              "Children": [
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "XProperty": "[Leaf].LAI",
                  "Name": "KLModifier",
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        3.0
                      ],
                      "Y": [
                        1.0,
                        1.0
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.AirTemperatureFunction, Models",
                  "Name": "TemperatureEffect",
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        26.0,
                        35.0
                      ],
                      "Y": [
                        1.0,
                        1.0,
                        1.0
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 6.0,
                  "Units": null,
                  "Name": "MaxDailyNUptake",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "SenescenceRate",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1000000.0,
                  "Units": null,
                  "Name": "MaximumRootDepth",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseLookup, Models",
                  "Name": "RootFrontVelocity",
                  "Children": [
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "Germination",
                      "End": "Emergence",
                      "Name": "PreEmergence",
                      "Children": [
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 3.0,
                          "Units": null,
                          "Name": "Function",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "Emergence",
                      "End": "StartFlowering",
                      "Name": "early",
                      "Children": [
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 15.0,
                          "Units": null,
                          "Name": "Function",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "StartFlowering",
                      "End": "Maturity",
                      "Name": "late",
                      "Children": [
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 17.0,
                          "Units": null,
                          "Name": "Function",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.01,
                  "Units": null,
                  "Name": "MaximumNConc",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.005,
                  "Units": null,
                  "Name": "MinimumNConc",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseBasedSwitch, Models",
                  "Start": "Emergence",
                  "End": "EndGrainFill",
                  "Name": "NitrogenDemandSwitch",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "XProperty": "[Root].LengthDensity",
                  "Name": "KNO3",
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        0.003
                      ],
                      "Y": [
                        0.02,
                        0.02
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "XProperty": "[Root].LengthDensity",
                  "Name": "KNH4",
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        0.003
                      ],
                      "Y": [
                        0.0,
                        0.0
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "Name": "BiomassRemovalDefaults",
                  "Children": [
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.2,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Harvest",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.3,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Cut",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.1,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Prune",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.15,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Graze",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "XProperty": "[Root].RWC",
                  "Name": "NUptakeSWFactor",
                  "Children": [
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        1.0
                      ],
                      "Y": [
                        0.0,
                        1.0
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.2,
                  "Units": "g/plant",
                  "Name": "InitialDM",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 40.0,
                  "Units": "m/g",
                  "Name": "SpecificRootLength",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": null,
                  "Name": "DMConversionEfficiency",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": null,
                  "Name": "MaintenanceRespirationFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": null,
                  "Name": "CarbonConcentration",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "DMDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.PartitionFractionDemandFunction, Models",
                          "Name": "DMDemandFunction",
                          "Children": [
                            {
                              "$type": "Models.Functions.PhaseLookup, Models",
                              "Name": "PartitionFraction",
                              "Children": [
                                {
                                  "$type": "Models.Functions.PhaseLookupValue, Models",
                                  "Start": "Emergence",
                                  "End": "StartFlowering",
                                  "Name": "Early",
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 0.1,
                                      "Units": null,
                                      "Name": "Function",
                                      "Children": [],
                                      "IncludeInDocumentation": true,
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.PhaseLookupValue, Models",
                                  "Start": "StartFlowering",
                                  "End": "EndFlowering",
                                  "Name": "Middle",
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 0.08,
                                      "Units": null,
                                      "Name": "Function",
                                      "Children": [],
                                      "IncludeInDocumentation": true,
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.PhaseLookupValue, Models",
                                  "Start": "EndFlowering",
                                  "End": "Maturity",
                                  "Name": "Late",
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 0.0,
                                      "Units": null,
                                      "Name": "Function",
                                      "Children": [],
                                      "IncludeInDocumentation": true,
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 1.0,
                          "Units": null,
                          "Name": "StructuralFraction",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageDMDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "StorageFraction",
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 1.0,
                              "Units": null,
                              "Name": "One",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Root].DMDemands.Structural.StructuralFraction.Value()",
                              "Name": "StructuralFraction",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "NDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Root].minimumNconc.Value()",
                          "Name": "MinNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Root].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Metabolic",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "MetabolicNconc",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Root].criticalNConc.Value()",
                              "Name": "CritNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Root].minimumNconc.Value()",
                              "Name": "MinNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Root].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageNDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Root].nitrogenDemandSwitch.Value()",
                          "Name": "NitrogenDemandSwitch",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Root].maximumNconc.Value()",
                          "Name": "MaxNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.Nodule, Models",
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "Name": "Nodule",
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "",
                  "Name": "Memo",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 7.0,
                  "Units": null,
                  "Name": "FixationMetabolicCost",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.02,
                  "Units": null,
                  "Name": "MaximumNConc",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.01,
                  "Units": null,
                  "Name": "MinimumNConc",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "SenescenceRate",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "NReallocationFactor",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseBasedSwitch, Models",
                  "Start": "Emergence",
                  "End": "EndGrainFill",
                  "Name": "NitrogenDemandSwitch",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "Name": "BiomassRemovalDefaults",
                  "Children": [
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.5,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.1,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Harvest",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.8,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.0,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Cut",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.6,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Prune",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.6,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.2,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Graze",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/m^2",
                  "Name": "InitialWtFunction",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DetachmentRateFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "FixationRate",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "\r\n",
                      "Name": "Memo1",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Nodule].Live.Wt",
                      "Name": "NoduleWt",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "SpecificNitrogenaseActivity",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MinimumFunction, Models",
                      "Name": "MinimumFunction",
                      "Children": [
                        {
                          "$type": "Models.Functions.AirTemperatureFunction, Models",
                          "Name": "FT",
                          "Children": [
                            {
                              "$type": "Models.Functions.XYPairs, Models",
                              "X": [
                                0.0,
                                20.0,
                                30.0,
                                40.0
                              ],
                              "Y": [
                                0.0,
                                1.0,
                                1.0,
                                0.0
                              ],
                              "Name": "XYPairs",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.LinearInterpolationFunction, Models",
                          "XProperty": "[Leaf].Fw",
                          "Name": "FW",
                          "Children": [
                            {
                              "$type": "Models.Functions.XYPairs, Models",
                              "X": [
                                0.0,
                                1.0,
                                1.5
                              ],
                              "Y": [
                                0.0,
                                1.0,
                                1.0
                              ],
                              "Name": "XYPairs",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.LinearInterpolationFunction, Models",
                          "XProperty": "[Leaf].Fw",
                          "Name": "FWlog",
                          "Children": [
                            {
                              "$type": "Models.Memo, Models",
                              "Text": "",
                              "Name": "Memo",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.XYPairs, Models",
                              "X": [
                                0.0,
                                1.0,
                                1.5
                              ],
                              "Y": [
                                1.0,
                                1.0,
                                1.0
                              ],
                              "Name": "XYPairs",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "0-1",
                  "Name": "MaintenanceRespirationFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "0-1",
                  "Name": "DMConversionEfficiency",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "NRetranslocationFactor",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "DMReallocationFactor",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "DMRetranslocationFactor",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Nodule].MinimumNConc.Value()",
                  "Name": "CriticalNConc",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": null,
                  "Name": "CarbonConcentration",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "DMDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.PartitionFractionDemandFunction, Models",
                          "Name": "DMDemandFunction",
                          "Children": [
                            {
                              "$type": "Models.Functions.PhaseLookup, Models",
                              "Name": "PartitionFraction",
                              "Children": [
                                {
                                  "$type": "Models.Functions.PhaseLookupValue, Models",
                                  "Start": "Emergence",
                                  "End": "StartFlowering",
                                  "Name": "Early",
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 0.03,
                                      "Units": null,
                                      "Name": "Function",
                                      "Children": [],
                                      "IncludeInDocumentation": true,
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.PhaseLookupValue, Models",
                                  "Start": "StartFlowering",
                                  "End": "EndFlowering",
                                  "Name": "Middle",
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 0.02,
                                      "Units": null,
                                      "Name": "Function",
                                      "Children": [],
                                      "IncludeInDocumentation": true,
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.PhaseLookupValue, Models",
                                  "Start": "EndFlowering",
                                  "End": "Maturity",
                                  "Name": "Late",
                                  "Children": [
                                    {
                                      "$type": "Models.Functions.Constant, Models",
                                      "FixedValue": 0.0,
                                      "Units": null,
                                      "Name": "Function",
                                      "Children": [],
                                      "IncludeInDocumentation": true,
                                      "Enabled": true,
                                      "ReadOnly": false
                                    }
                                  ],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Memo, Models",
                                  "Text": "",
                                  "Name": "Memo",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 1.0,
                          "Units": "g/g",
                          "Name": "StructuralFraction",
                          "Children": [
                            {
                              "$type": "Models.Memo, Models",
                              "Text": "",
                              "Name": "Memo",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageDMDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "StorageFraction",
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 1.0,
                              "Units": null,
                              "Name": "One",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Nodule].DMDemands.Structural.StructuralFraction.Value()",
                              "Name": "StructuralFraction",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "NDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Nodule].minimumNconc.Value()",
                          "Name": "MinNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Nodule].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Metabolic",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "MetabolicNconc",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Nodule].criticalNConc.Value()",
                              "Name": "CritNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Nodule].minimumNconc.Value()",
                              "Name": "MinNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Nodule].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageNDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Nodule].nitrogenDemandSwitch.Value()",
                          "Name": "NitrogenDemandSwitch",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Nodule].maximumNconc.Value()",
                          "Name": "MaxNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.GenericOrgan, Models",
              "StartLive": null,
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "Name": "Shell",
              "Children": [
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "NReallocationFactor",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.1,
                  "Units": null,
                  "Name": "NRetranslocationFactor",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.03,
                  "Units": null,
                  "Name": "MaximumNConc",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.01,
                  "Units": null,
                  "Name": "MinimumNConc",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.1,
                  "Units": null,
                  "Name": "DMRetranslocationFactor",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseBasedSwitch, Models",
                  "Start": "Germination",
                  "End": "Maturity",
                  "Name": "NitrogenDemandSwitch",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MultiplyFunction, Models",
                  "Name": "PodNumber",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "PodsPerNode",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Structure].TotalStemPopn",
                      "Name": "StemPopulation",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.PhaseLookupValue, Models",
                      "Start": "StartFlowering",
                      "End": "HarvestRipe",
                      "Name": "FloweringNodes",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "FloweringNodes",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Structure].LeafTipsAppeared",
                              "Name": "TotalNodes",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].NFF.Value()",
                              "Name": "VegetativeNodes",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "Name": "BiomassRemovalDefaults",
                  "Children": [
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.5,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.1,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Harvest",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.8,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.0,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Cut",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.6,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Prune",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.6,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.2,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Graze",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/m^2",
                  "Name": "InitialWtFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "SenescenceRate",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DetachmentRateFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "0-1",
                  "Name": "MaintenanceRespirationFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "0-1",
                  "Name": "DMConversionEfficiency",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "DMReallocationFactor",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Shell].MinimumNConc.Value()",
                  "Name": "CriticalNConc",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": null,
                  "Name": "CarbonConcentration",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "DMDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.PopulationBasedDemandFunction, Models",
                          "Name": "DMDemandFunction",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Phenology].ThermalTime.Value()",
                              "Name": "ThermalTime",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Shell].PodNumber.Value()",
                              "Name": "OrganPopulation",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 1.0,
                              "Units": null,
                              "Name": "ExpansionStress",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.AddFunction, Models",
                              "Name": "GrowthDuration",
                              "Children": [
                                {
                                  "$type": "Models.Functions.VariableReference, Models",
                                  "VariableName": "[Phenology].Flowering.Target.Value()",
                                  "Name": "FloweringGrowthPeriod",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                },
                                {
                                  "$type": "Models.Functions.Constant, Models",
                                  "FixedValue": 60.0,
                                  "Units": null,
                                  "Name": "PostFloweringGrowthPeriod",
                                  "Children": [],
                                  "IncludeInDocumentation": true,
                                  "Enabled": true,
                                  "ReadOnly": false
                                }
                              ],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 4.0,
                              "Units": null,
                              "Name": "StartStage",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 0.5,
                              "Units": null,
                              "Name": "MaximumOrganWt",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 0.7,
                          "Units": null,
                          "Name": "StructuralFraction",
                          "Children": [
                            {
                              "$type": "Models.Memo, Models",
                              "Text": "",
                              "Name": "Memo",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageDMDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "StorageFraction",
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 1.0,
                              "Units": null,
                              "Name": "One",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Shell].DMDemands.Structural.StructuralFraction.Value()",
                              "Name": "StructuralFraction",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "NDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Shell].minimumNconc.Value()",
                          "Name": "MinNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Shell].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Metabolic",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "MetabolicNconc",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Shell].criticalNConc.Value()",
                              "Name": "CritNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Shell].minimumNconc.Value()",
                              "Name": "MinNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Shell].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageNDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Shell].nitrogenDemandSwitch.Value()",
                          "Name": "NitrogenDemandSwitch",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Shell].maximumNconc.Value()",
                          "Name": "MaxNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.RetranslocateNonStructural, Models",
                  "Name": "RetranslocateNitrogen",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.Leaf, Models",
              "Leaves": [],
              "CurrentExpandingLeaf": 0.0,
              "StartFractionExpanded": 0.0,
              "FractionNextleafExpanded": 0.0,
              "DeadNodesYesterday": 0.0,
              "MaxCover": 1.0,
              "GrowthRespiration": 0.0,
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "Albedo": 0.0,
              "Gsmax350": 0.0,
              "R50": 200.0,
              "FRGR": 0.0,
              "PotentialEP": 0.0,
              "WaterDemand": 0.0,
              "LightProfile": null,
              "MicroClimatePresent": true,
              "KDead": 0.3,
              "MaximumMainStemLeafNumber": 40,
              "TipsAtEmergence": 0,
              "CohortsAtInitialisation": 0,
              "FractionDied": 0.0,
              "Name": "Leaf",
              "Children": [
                {
                  "$type": "Models.PMF.Organs.LeafCohort, Models",
                  "ApexCohort": null,
                  "LiveStart": null,
                  "NReallocationFactor": 0.0,
                  "DMReallocationFactor": 0.0,
                  "NRetranslocationFactor": 0.0,
                  "DMRetranslocationFactor": 0.0,
                  "ShadeInducedSenRate": 0.0,
                  "SenescedFrac": 0.0,
                  "DeltaPotentialArea": 0.0,
                  "DeltaStressConstrainedArea": 0.0,
                  "DeltaCarbonConstrainedArea": 0.0,
                  "PotentialStructuralDMAllocation": 0.0,
                  "PotentialMetabolicDMAllocation": 0.0,
                  "MetabolicNReallocated": 0.0,
                  "MetabolicWtReallocated": 0.0,
                  "StorageNReallocated": 0.0,
                  "StorageWtReallocated": 0.0,
                  "MetabolicNRetranslocated": 0.0,
                  "StorageNRetrasnlocated": 0.0,
                  "DMRetranslocated": 0.0,
                  "MetabolicNAllocation": 0.0,
                  "StructuralDMAllocation": 0.0,
                  "MetabolicDMAllocation": 0.0,
                  "Rank": 1,
                  "Area": 100.0,
                  "MaintenanceRespiration": 0.0,
                  "Name": "InitialLeaf1",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Organs.LeafCohort, Models",
                  "ApexCohort": null,
                  "LiveStart": null,
                  "NReallocationFactor": 0.0,
                  "DMReallocationFactor": 0.0,
                  "NRetranslocationFactor": 0.0,
                  "DMRetranslocationFactor": 0.0,
                  "ShadeInducedSenRate": 0.0,
                  "SenescedFrac": 0.0,
                  "DeltaPotentialArea": 0.0,
                  "DeltaStressConstrainedArea": 0.0,
                  "DeltaCarbonConstrainedArea": 0.0,
                  "PotentialStructuralDMAllocation": 0.0,
                  "PotentialMetabolicDMAllocation": 0.0,
                  "MetabolicNReallocated": 0.0,
                  "MetabolicWtReallocated": 0.0,
                  "StorageNReallocated": 0.0,
                  "StorageWtReallocated": 0.0,
                  "MetabolicNRetranslocated": 0.0,
                  "StorageNRetrasnlocated": 0.0,
                  "DMRetranslocated": 0.0,
                  "MetabolicNAllocation": 0.0,
                  "StructuralDMAllocation": 0.0,
                  "MetabolicDMAllocation": 0.0,
                  "Rank": 2,
                  "Area": 0.0,
                  "MaintenanceRespiration": 0.0,
                  "Name": "InitialLeaf2",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Phenology].ThermalTime.Value()",
                  "Name": "ThermalTime",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Organs.Leaf+LeafCohortParameters, Models",
                  "ExpansionStressValue": 0.0,
                  "Name": "LeafCohortParameters",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": "0-1",
                      "Name": "SenessingLeafRelativeSize",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Phenology].Stage",
                      "Name": "GrowthDuration",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            1.0,
                            4.5,
                            6.0
                          ],
                          "Y": [
                            90.0,
                            90.0,
                            40.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Phenology].Stage",
                      "Name": "MaxArea",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            1.0,
                            2.0,
                            3.0,
                            4.0,
                            5.0,
                            6.0,
                            7.0,
                            8.0
                          ],
                          "Y": [
                            0.0,
                            1000.0,
                            2000.0,
                            3000.0,
                            4000.0,
                            2000.0,
                            0.0,
                            0.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Phenology].Stage",
                      "Name": "LagDuration",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            1.0,
                            4.5,
                            4.75,
                            5.0,
                            6.0
                          ],
                          "Y": [
                            400.0,
                            400.0,
                            200.0,
                            100.0,
                            50.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Phenology].Stage",
                      "Name": "SenescenceDuration",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            1.0,
                            5.0,
                            5.5,
                            6.0
                          ],
                          "Y": [
                            80.0,
                            80.0,
                            40.0,
                            10.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1000000.0,
                      "Units": null,
                      "Name": "DetachmentLagDuration",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1000000.0,
                      "Units": null,
                      "Name": "DetachmentDuration",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].LAI",
                      "Name": "SpecificLeafAreaMax",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            4.0,
                            6.0,
                            8.0
                          ],
                          "Y": [
                            90000.0,
                            40000.0,
                            40000.0,
                            40000.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.5,
                      "Units": null,
                      "Name": "StructuralFraction",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].LAI",
                      "Name": "SpecificLeafAreaMin",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            4.0,
                            6.0,
                            8.0
                          ],
                          "Y": [
                            45000.0,
                            20000.0,
                            20000.0,
                            20000.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[FieldPea].Leaf.Fw",
                      "Name": "ExpansionStress",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            1.0
                          ],
                          "Y": [
                            0.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.03,
                      "Units": null,
                      "Name": "MinimumNConc",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.05,
                      "Units": null,
                      "Name": "CriticalNConc",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.08,
                      "Units": null,
                      "Name": "MaximumNConc",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "NReallocationFactor",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "NRetranslocationFactor",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.5,
                      "Units": null,
                      "Name": "DMRetranslocationFactor",
                      "Children": [
                        {
                          "$type": "Models.Memo, Models",
                          "Text": "",
                          "Name": "Memo",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].CohortCurrentRankCoverAbove",
                      "Name": "ShadeInducedSenescenceRate",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            0.9,
                            0.90001
                          ],
                          "Y": [
                            0.0,
                            0.0,
                            0.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "InitialNConc",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "StorageFraction",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "DMReallocationFactor",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.01,
                      "Units": null,
                      "Name": "LeafSizeShapeParameter",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "MaintenanceRespirationFunction",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "DroughtInducedSenAcceleration",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": "0-1",
                      "Name": "CellDivisionStress",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": "0-1",
                      "Name": "CellDivisionStress1",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": "0-1",
                      "Name": "CellDivisionStress2",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": "0-1",
                      "Name": "CellDivisionStress3",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": "0-1",
                      "Name": "CellDivisionStress4",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "DroughtInducedLagAcceleration",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.ArrayFunction, Models",
                      "Values": "1 1 1",
                      "Units": null,
                      "Name": "LagDurationAgeMultiplier",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.ArrayFunction, Models",
                      "Values": "1 1 1",
                      "Units": null,
                      "Name": "SenescenceDurationAgeMultiplier",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.ArrayFunction, Models",
                      "Values": "1 1 1 1 1 1 1 1 1 1 1 1",
                      "Units": null,
                      "Name": "LeafSizeAgeMultiplier",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "RemobilisationCost",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.4,
                      "Units": null,
                      "Name": "CarbonConcentration",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "XProperty": "[Leaf].LAI",
                  "Name": "ExtinctionCoeff",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        0.0,
                        0.5
                      ],
                      "Y": [
                        0.7,
                        0.7
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.SupplyFunctions.RUEModel, Models",
                  "Name": "Photosynthesis",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "RUE",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.WeightedTemperatureFunction, Models",
                      "MaximumTemperatureWeighting": 0.5,
                      "Name": "FT",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            15.0,
                            30.0,
                            40.0
                          ],
                          "Y": [
                            0.0,
                            1.0,
                            1.0,
                            0.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].Photosynthesis.VPD",
                      "Name": "FVPD",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            10.0,
                            50.0
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].Fn",
                      "Name": "FN",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            1.0,
                            1.5
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].Fw",
                      "Name": "FW",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            1.0,
                            1.5
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.SupplyFunctions.RUECO2Function, Models",
                      "PhotosyntheticPathway": "C3",
                      "Name": "FCO2",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "\r\nAyaz eta 2004 presented a RUE of 1.6 g/MJ PAR during non-limiting temperature conditions for field pea.  Halving this to make it total radiation gives 0.8 g/MJ and adding 20% to account for root and  nodule production and N fixiation costs gives 1.0 g/MJ\r\n",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Leaf].RadIntTot",
                      "Name": "RadnInt",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.MinimumFunction, Models",
                  "Name": "FRGRFunction",
                  "Children": [
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Leaf].Photosynthesis.FT.Value()",
                      "Name": "RUE_FT",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MinimumFunction, Models",
                      "Name": "Others",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Leaf].Photosynthesis.FN.Value()",
                          "Name": "RUE_FN",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Leaf].Photosynthesis.FVPD.Value()",
                          "Name": "RUE_FVPD",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.LinearInterpolationFunction, Models",
                  "XProperty": "[Weather].MinT",
                  "Name": "FrostFraction",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.XYPairs, Models",
                      "X": [
                        -1.0,
                        0.0
                      ],
                      "Y": [
                        0.0,
                        0.0
                      ],
                      "Name": "XYPairs",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "Name": "BiomassRemovalDefaults",
                  "Children": [
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.3,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Harvest",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.8,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.0,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Cut",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.6,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Prune",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.6,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.1,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Graze",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.5,
                  "Units": null,
                  "Name": "StructuralFraction",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": null,
                  "Name": "DMConversionEfficiency",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": null,
                  "Name": "CarbonConcentration",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": null,
                  "Name": "StomatalConductanceCO2Modifier",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Organs.GenericOrgan, Models",
              "StartLive": null,
              "DMSupply": null,
              "NSupply": null,
              "DMDemand": null,
              "NDemand": null,
              "potentialDMAllocation": null,
              "Name": "Stem",
              "Children": [
                {
                  "$type": "Models.Memo, Models",
                  "Text": "",
                  "Name": "Memo",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "NReallocationFactor",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.1,
                  "Units": null,
                  "Name": "NRetranslocationFactor",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.1,
                  "Units": null,
                  "Name": "DMRetranslocationFactor",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.03,
                  "Units": null,
                  "Name": "MaximumNConc",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.01,
                  "Units": null,
                  "Name": "MinimumNConc",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.PhaseBasedSwitch, Models",
                  "Start": "Emergence",
                  "End": "EndGrainFill",
                  "Name": "NitrogenDemandSwitch",
                  "Children": [
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Library.BiomassRemoval, Models",
                  "Name": "BiomassRemovalDefaults",
                  "Children": [
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.5,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.1,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Harvest",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.8,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.0,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Cut",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.0,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.6,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Prune",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.PMF.OrganBiomassRemovalType, Models",
                      "FractionLiveToRemove": 0.6,
                      "FractionDeadToRemove": 0.0,
                      "FractionLiveToResidue": 0.2,
                      "FractionDeadToResidue": 0.0,
                      "Name": "Graze",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "g/m^2",
                  "Name": "InitialWtFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "SenescenceRate",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "/d",
                  "Name": "DetachmentRateFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": "0-1",
                  "Name": "MaintenanceRespirationFunction",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 1.0,
                  "Units": "0-1",
                  "Name": "DMConversionEfficiency",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "DMReallocationFactor",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.VariableReference, Models",
                  "VariableName": "[Stem].MinimumNConc.Value()",
                  "Name": "CriticalNConc",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.0,
                  "Units": null,
                  "Name": "RemobilisationCost",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.Constant, Models",
                  "FixedValue": 0.4,
                  "Units": null,
                  "Name": "CarbonConcentration",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "DMDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.DemandFunctions.InternodeDemandFunction, Models",
                          "Name": "DMDemandFunction",
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 0.1,
                              "Units": null,
                              "Name": "InterNodeWt",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 0.7,
                          "Units": null,
                          "Name": "StructuralFraction",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 0.0,
                      "Units": null,
                      "Name": "Metabolic",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageDMDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "StorageFraction",
                          "Children": [
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 1.0,
                              "Units": null,
                              "Name": "One",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stem].DMDemands.Structural.StructuralFraction.Value()",
                              "Name": "StructuralFraction",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.BiomassDemand, Models",
                  "Name": "NDemands",
                  "Children": [
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Structural",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stem].minimumNconc.Value()",
                          "Name": "MinNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stem].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "Metabolic",
                      "Children": [
                        {
                          "$type": "Models.Functions.SubtractFunction, Models",
                          "Name": "MetabolicNconc",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stem].criticalNConc.Value()",
                              "Name": "CritNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stem].minimumNconc.Value()",
                              "Name": "MinNconc",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stem].potentialDMAllocation.Structural",
                          "Name": "PotentialDMAllocation",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.DemandFunctions.StorageNDemandFunction, Models",
                      "Name": "Storage",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stem].nitrogenDemandSwitch.Value()",
                          "Name": "NitrogenDemandSwitch",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stem].maximumNconc.Value()",
                          "Name": "MaxNconc",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.Organs.EnergyBalance, Models",
                  "Albedo": 0.0,
                  "Gsmax350": 0.0,
                  "R50": 0.0,
                  "KDead": 0.0,
                  "LAIDead": 0.0,
                  "Name": "EnergyBalance",
                  "Children": [
                    {
                      "$type": "Models.Functions.MinimumFunction, Models",
                      "Name": "FRGRFunction",
                      "Children": [
                        {
                          "$type": "Models.Functions.VariableReference, Models",
                          "VariableName": "[Stem].Photosynthesis.FT.Value()",
                          "Name": "RUE_FT",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.MinimumFunction, Models",
                          "Name": "Others",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stem].Photosynthesis.FN.Value()",
                              "Name": "RUE_FN",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stem].Photosynthesis.FVPD.Value()",
                              "Name": "RUE_FVPD",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "StomatalConductanceCO2Modifier",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Structuture].Height",
                      "Name": "HeightFunction",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Structuture].Height",
                      "Name": "DepthFunction",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "GAIDeadFunction",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.MultiplyFunction, Models",
                      "Name": "GAIFunction",
                      "Children": [
                        {
                          "$type": "Models.Functions.Constant, Models",
                          "FixedValue": 1.5,
                          "Units": null,
                          "Name": "VolumeToArea",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.Functions.DivideFunction, Models",
                          "Name": "Volume",
                          "Children": [
                            {
                              "$type": "Models.Functions.VariableReference, Models",
                              "VariableName": "[Stem].Wt",
                              "Name": "Wt",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            },
                            {
                              "$type": "Models.Functions.Constant, Models",
                              "FixedValue": 10000.0,
                              "Units": "g/l",
                              "Name": "Density",
                              "Children": [],
                              "IncludeInDocumentation": true,
                              "Enabled": true,
                              "ReadOnly": false
                            }
                          ],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.5,
                      "Units": null,
                      "Name": "ExtinctionCoefficientFunction",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Functions.SupplyFunctions.RUEModel, Models",
                  "Name": "Photosynthesis",
                  "Children": [
                    {
                      "$type": "Models.Functions.Constant, Models",
                      "FixedValue": 1.0,
                      "Units": null,
                      "Name": "RUE",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.WeightedTemperatureFunction, Models",
                      "MaximumTemperatureWeighting": 0.5,
                      "Name": "FT",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            15.0,
                            30.0,
                            40.0
                          ],
                          "Y": [
                            0.0,
                            1.0,
                            1.0,
                            0.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].Photosynthesis.VPD",
                      "Name": "FVPD",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            10.0,
                            50.0
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].Fn",
                      "Name": "FN",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            1.0,
                            1.5
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.LinearInterpolationFunction, Models",
                      "XProperty": "[Leaf].Fw",
                      "Name": "FW",
                      "Children": [
                        {
                          "$type": "Models.Functions.XYPairs, Models",
                          "X": [
                            0.0,
                            1.0,
                            1.5
                          ],
                          "Y": [
                            1.0,
                            1.0,
                            1.0
                          ],
                          "Name": "XYPairs",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.SupplyFunctions.RUECO2Function, Models",
                      "PhotosyntheticPathway": "C3",
                      "Name": "FCO2",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Memo, Models",
                      "Text": "\r\nAyaz eta 2004 presented a RUE of 1.6 g/MJ PAR during non-limiting temperature conditions for field pea.  Halving this to make it total radiation gives 0.8 g/MJ and adding 20% to account for root and  nodule production and N fixiation costs gives 1.0 g/MJ\r\n",
                      "Name": "Memo",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Functions.VariableReference, Models",
                      "VariableName": "[Leaf].RadIntTot",
                      "Name": "RadnInt",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.PMF.RetranslocateNonStructural, Models",
                  "Name": "RetranslocateNitrogen",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "Propertys": [
                "[Leaf].Live",
                "[Leaf].Dead",
                "[Stem].Live",
                "[Stem].Dead",
                "[Grain].Live",
                "[Grain].Dead",
                "[Shell].Live",
                "[Shell].Dead"
              ],
              "DMDOfStructural": 0.6,
              "Name": "AboveGround",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "Propertys": [
                "[Root].Live",
                "[Root].Dead",
                "[Nodule].Live",
                "[Nodule].Dead"
              ],
              "DMDOfStructural": 0.6,
              "Name": "BelowGround",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "Propertys": [
                "[Leaf].Live",
                "[Leaf].Dead",
                "[Stem].Live",
                "[Stem].Dead",
                "[Grain].Live",
                "[Grain].Dead",
                "[Shell].Live",
                "[Shell].Dead",
                "[Root].Live",
                "[Root].Dead",
                "[Nodule].Live",
                "[Nodule].Dead"
              ],
              "DMDOfStructural": 0.6,
              "Name": "Total",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "Propertys": [
                "[Leaf].Live",
                "[Stem].Live",
                "[Grain].Live",
                "[Shell].Live",
                "[Root].Live",
                "[Nodule].Live"
              ],
              "DMDOfStructural": 0.6,
              "Name": "TotalLive",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "Propertys": [
                "[Leaf].Dead",
                "[Stem].Dead",
                "[Grain].Dead",
                "[Shell].Dead",
                "[Root].Dead",
                "[Nodule].Dead"
              ],
              "DMDOfStructural": 0.6,
              "Name": "TotalDead",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.CompositeBiomass, Models",
              "Propertys": [
                "[Shell].Live",
                "[Shell].Dead",
                "[Grain].Live",
                "[Grain].Dead"
              ],
              "DMDOfStructural": 0.6,
              "Name": "Pod",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                ""
              ],
              "Name": "Primo",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                ""
              ],
              "Name": "Rex",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": null,
              "Name": "Excel",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": null,
              "Name": "Kaspa",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": null,
              "Name": "Mutka",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                ""
              ],
              "Name": "Parafield",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                ""
              ],
              "Name": "Parv",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                ""
              ],
              "Name": "Crusader",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.X = 13,16",
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.Y = 8.2, 7.5",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.X = 14,16",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.Y = 6.5, 4"
              ],
              "Name": "Massey",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.X = 12,16",
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.Y = 12,10.9",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.X = 14,16",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.Y = 6,4"
              ],
              "Name": "Patea",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.X = 12,16",
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.Y = 13.7,12",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.X = 14,16",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.Y = 6,3"
              ],
              "Name": "Trounce",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.X = 12,16",
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.Y = 13.7,12",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.X = 14,16",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.Y = 5,5"
              ],
              "Name": "Rovar",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.X = 12,16",
                "[Phenology].Vegetative.CompletionNodeNumber.XYPairs.Y = 18,18",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.X = 13,16",
                "[Phenology].Flowering.CompletionNodeNumber.FloweringNodes.XYPairs.Y = 4,4"
              ],
              "Name": "Whero",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Memo, Models",
              "Text": "\r\n## References  \r\n\r\n### **Ayaz S, McKenzie BA, McNeil DL, Hill GD.** **2004**. Light interception and utilization of four grain legumes sown at different plant populations and depths. _Journal of Agricultural Science,_ **142**: 297-308.  \r\n **Ayaz S, McKenzie BA, Hill GD, McNeil DL.** **2004**. Variability in yield of four grain legume species in a subhumid temperate environment. II. Yield components. _Journal of Agricultural Science,_ **142**: 21-28.  \r\n **Ayaz S, McKenzie BA, Hill GD, McNeil DL.** **2004**. Nitrogen distribution in four grain legumes. _Journal of Agricultural Science,_ **142**: 309-317.  \r\n **Wilson DR, Robertson MJ.** **1996.** Pea phenology responses to temperature and photoperiod. _Australian Agronomy Society_.",
              "Name": "Memo",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                "[Stem].DMDemands.Structural.DMDemandFunction.InterNodeWt.FixedValue = 0.25",
                "[Phenology].GrainFilling.Target.FixedValue = 750"
              ],
              "Name": "A_green",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Cultivar, Models",
              "Command": [
                "[Stem].DMDemands.Structural.DMDemandFunction.InterNodeWt.FixedValue = 0.2",
                "[Phenology].GrainFilling.Target.FixedValue = 1000"
              ],
              "Name": "B_yellow",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Storage.DataStore, Models",
      "useFirebird": false,
      "CustomFileName": null,
      "Name": "DataStore",
      "Children": [],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    },
    {
      "$type": "Models.Core.Simulation, Models",
      "Name": "BaseSimulation",
      "Children": [
        {
          "$type": "Models.Clock, Models",
          "StartDate": "1985-03-01T00:00:00",
          "EndDate": "1995-03-31T00:00:00",
          "Name": "Clock",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Weather, Models",
          "FileName": "\\\\Lin-file\\home$\\HRARXC\\My Documents\\RCichota\\Projects\\InteroperableModels\\GitHub\\Simulations\\WeatherData.met",
          "ExcelWorkSheetName": "",
          "Name": "Weather",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Summary, Models",
          "CaptureErrors": true,
          "CaptureWarnings": true,
          "CaptureSummaryText": true,
          "Name": "SummaryFile",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Soils.Arbitrator.SoilArbitrator, Models",
          "Name": "SoilArbitrator",
          "Children": [],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Zone, Models",
          "Area": 1.0,
          "Slope": 0.0,
          "Name": "Field",
          "Children": [
            {
              "$type": "Models.Core.Folder, Models",
              "ShowPageOfGraphs": true,
              "Name": "ManagerFolder",
              "Children": [
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing Models.Core;\r\nusing System.Collections.Generic;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        //Links to other Apsim modules\r\n        [Link] private Clock Clock;\r\n        [Link] private Zone myZone;\r\n        [Link] private Irrigation Irrigation;\r\n        [Link] private AgPasture.Sward Pasture;\r\n        [Link] private ISummary mySummary = null;\r\n\r\n        //User inputs from properties tab\r\n        [Separator(\"Basic parameters for managing the pasture-crop rotations\")]\r\n        [Description(\" Is pasture part of rotation?\")]\r\n        public bool RotationHasPasture { get; set; }\r\n        [Description(\" List of crops in the rotation (separated by comma): \")]\r\n        public string[] CropList { get; set; }\r\n\r\n        [Separator(\"Parameters to be used if pasture is included in the rotation\")]\r\n        [Description(\" Number of years for the pasture-crop rotation\")]\r\n        public int RotationLength { get; set; }\r\n        [Description(\" Year within the rotation to kill off the pasture\")]\r\n        public int YearToKillOffPasture { get; set; }\r\n        [Description(\" Pasture is killed off in Spring or Summer?\")]\r\n        public string SeasonToKillPasture { get; set; }\r\n        [Description(\" Pasture is re-sown in Spring or Autumn?\")]\r\n        public string SeasonToResowPasture { get; set; }\r\n\r\n        //Manager outputs\r\n        [XmlIgnore] public string CurrentCrop { get; set; }\r\n        [XmlIgnore] public int CurrentRotationYear { get; set; }\r\n        [XmlIgnore] public int CurrentCropIndex { get; set; }\r\n\r\n        //Internal variables\r\n        private List<CropsInfo> cropsAvailable = new List<CropsInfo>(); \t\t\t\t\t\t// list of crops, and basic parameters, available to simulate\r\n        private List<CropsInfo> cropsInRotation = new List<CropsInfo>(); \t\t\t\t\t\t// list of crops to be used in the rotation\r\n        private Dictionary<string,string> pastureSowingDates = new Dictionary<string,string>();\t// list of dates for re-sowing pasture, according to season\r\n        private Dictionary<string,string> pastureKillOffDates= new Dictionary<string,string>();\t// list of dates for killing off pasture, according to season\r\n        private string dateSown;\t\t\t\t// date a crop is sown\r\n        private string cropHarvested;\t\t\t// crop that is harvested\r\n        private string dateHarvested;\t\t\t// date a crop is harvested (or pasture killed)\r\n        private int daysAfterSowing;\r\n        private int currentYear;\r\n        private int croppingLength;\t\t\t\t// number of crops in the rotation\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \t// set up the arrays with crops available to simulate and their basic management options\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"AutumnWheat\", SowingDate:\"20-Mar\", HarvestingDate:\"10-Mar\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"SpringWheat\", SowingDate:\"10-Sep\", HarvestingDate:\"10-Mar\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"AutumnBarley\", SowingDate:\"01-Apr\", HarvestingDate:\"16-Feb\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"SpringBarley\", SowingDate:\"15-Oct\", HarvestingDate:\"10-Mar\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"AutumnBarleyChop\", SowingDate:\"01-Apr\", HarvestingDate:\"11-Dec\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"SummerBarleyChop\", SowingDate:\"15-Dec\", HarvestingDate:\"10-Mar\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"AutumnOats\", SowingDate:\"01-May\", HarvestingDate:\"21-Jan\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"SpringOats\", SowingDate:\"10-Sep\", HarvestingDate:\"01-Mar\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"AutumnOatsChop\", SowingDate:\"15-Mar\", HarvestingDate:\"11-Aug\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"SpringOatsChop\", SowingDate:\"10-Sep\", HarvestingDate:\"11-Dec\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"SummerOatsChop\", SowingDate:\"15-Oct\", HarvestingDate:\"05-Mar\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"FodderBeetLiftedEarly\", SowingDate:\"15-Oct\", HarvestingDate:\"05-Sep\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"FodderBeetLiftedLate\", SowingDate:\"15-Oct\", HarvestingDate:\"05-Oct\"));\r\n            cropsAvailable.Add(new CropsInfo(CropName:\"FieldPea\", SowingDate:\"15-Oct\", HarvestingDate:\"26-Feb\"));\r\n            pastureSowingDates.Add(\"spring\",\"01-Dec\");\r\n            pastureSowingDates.Add(\"autumn\",\"15-Mar\");\r\n            pastureKillOffDates.Add(\"spring\",\"01-Sep\");\r\n            pastureKillOffDates.Add(\"summer\",\"15-Feb\");\r\n\r\n        \t// aux variables\r\n        \tDateTime date1 = Clock.StartDate;\r\n        \tDateTime date2;\r\n        \tDateTime date3;\r\n        \tint daysNotInPasture = 0;\r\n\r\n        \t// gather the index of each crop in the rotation (match given crops with availableCrops)\r\n            croppingLength = CropList.Length;\r\n        \tfor (int i = 0; i < croppingLength; i++)\r\n        \t{\r\n        \t\tbool foundCrop = false;\r\n        \t\tforeach (CropsInfo cropAvailable in cropsAvailable)\r\n        \t\t{\r\n\t        \t\tif (CropList[i].ToLower() == cropAvailable.CropName.ToLower())\r\n\t        \t\t{\r\n\t        \t\t\tcropsInRotation.Add(cropAvailable);\r\n\t        \t\t\tCropList[i] = cropAvailable.CropName;\r\n\t        \t\t\tfoundCrop = true;\r\n\t        \t\t\tbreak;\r\n\t        \t\t}\r\n        \t\t}\r\n\r\n        \t\tif (!foundCrop)\r\n        \t\t{\r\n        \t\t\tmySummary.WriteWarning(this, \" The crop \\'\" + CropList[i] + \"\\' is not available in the parameters list. It will be ignored.\");\r\n        \t\t\tCropList[i] += \"(skipped)\";\r\n        \t\t}\r\n        \t}\r\n\r\n        \t// check the length of the rotation, count the number of days not in pasture\r\n        \tcroppingLength = cropsInRotation.Count;\r\n        \t// 1. take starting date\r\n            if (RotationHasPasture)\r\n            \tdate1 = DateTime.Parse(pastureKillOffDates[SeasonToKillPasture.ToLower()] + \"-\" + Clock.StartDate.Year);\r\n        \telse if (cropsInRotation.Count>0)\r\n        \t\tdate1 = DateTime.Parse(cropsInRotation[0].SowingDate+ \"-\" + Clock.StartDate.Year);\r\n        \telse\r\n        \t\tmySummary.WriteWarning(this, \" The simulation was set up without any crop or pasture!!!\");\r\n\r\n      \t\t// check whether it is necessary to add a year to start of rotation (to ensure that pasture is killed or crop is sown in the beggining)\r\n      \t\tCurrentRotationYear = 0;\r\n      \t\tif ((YearToKillOffPasture < 2) && (date1 < Clock.StartDate.Date))\r\n      \t\t\tCurrentRotationYear = -1;\r\n\r\n        \t// 2. add time leading to and the duration of each crop\r\n        \tfor (int i = 0; i < croppingLength; i++)\r\n        \t{\r\n        \t\tdate2 = DateTime.Parse(cropsInRotation[i].SowingDate + \"-\" + date1.Year);\r\n   \t\t\t\tif (date2.Date < date1.Date)\r\n        \t\t\tdate2 = date2.AddYears(1);\r\n    \t\t\tdate3 = date2.AddDays(cropsInRotation[i].CropDuration);\r\n    \t\t\tdaysNotInPasture += (date3 - date1).Days;\r\n    \t\t\tdate1 = date3;\r\n    \t\t}\r\n\r\n            // add the days between last crop and the re-sowing of either pasture or first crop\r\n            if (RotationHasPasture)\r\n            \tdate2 = DateTime.Parse(pastureSowingDates[SeasonToResowPasture.ToLower()] + \"-\" + date1.Year);\r\n        \telse\r\n        \t\tdate2 = DateTime.Parse(cropsInRotation[0].SowingDate+ \"-\" + date1.Year);\r\n\r\n        \tif (date2 < date1)\r\n\t        \tdate2 = date2.AddYears(1);\r\n        \tdaysNotInPasture += (date2 - date1).Days;\r\n\r\n        \t// check that the total rotation length is ok\r\n        \tstring myMessage = \"\";\r\n            if (RotationHasPasture)\r\n            { // assume a minimum of 180 days in pasture\r\n\t        \tif ((RotationLength * 365.25 - daysNotInPasture) < 180)\r\n\t        \t{\r\n\t        \t\tmyMessage = \"The length of the rotation given was too small to simulate all given crops, the value was increased accordingly\";\r\n\t        \t\tRotationLength = (int)Math.Ceiling((daysNotInPasture + 180.0)/365.25);\r\n\t        \t}\r\n\t        }\r\n        \telse\r\n        \t\tRotationLength = (int)Math.Ceiling(daysNotInPasture/365.25);\r\n\r\n\t        // initialise some variables\r\n        \tCurrentCrop = \"None\";\r\n        \tdateSown = \"Never\";\r\n        \tcropHarvested = \"None\";\r\n        \tdateHarvested = \"Never\";\r\n            currentYear = Clock.Today.Year;\r\n        \tdaysAfterSowing = 0;\r\n            if (RotationHasPasture)\r\n            {\r\n            \tYearToKillOffPasture = Math.Max(1, YearToKillOffPasture);\r\n            \tCurrentRotationYear += Math.Max(1, RotationLength - YearToKillOffPasture + 2);\r\n            \tif (CurrentRotationYear > RotationLength)\r\n            \t\tCurrentRotationYear = 1;\r\n            \tCurrentCropIndex = -1;\r\n            }\r\n            else\r\n            {\r\n            \tYearToKillOffPasture = 0;\r\n            \tCurrentRotationYear += 1;\r\n            \tCurrentCropIndex = 0;\r\n            }\r\n\r\n        \t// write initialisation message\r\n        \tmySummary.WriteMessage(this,\" Rotation manager initialised\");\r\n        \tif (RotationHasPasture)\r\n        \t\tmySummary.WriteMessage(this,\"   Rotation consists of pasture and crops, with a rotation cycle of \" + RotationLength + \" years\");\r\n        \telse\r\n        \t\tmySummary.WriteMessage(this,\"   Rotation consists of only crops, with a rotation cycle of \" + RotationLength + \" years\");\r\n        \tmySummary.WriteMessage(this,\"   Crops in the rotations are: \" + string.Join(\", \",CropList));\r\n        \tif (myMessage != \"\")\r\n        \t\tmySummary.WriteWarning(this, myMessage);\r\n        }\r\n\r\n        [EventSubscribe(\"StartOfDay\")]\r\n        private void OnStartOfDay(object sender, EventArgs e)\r\n        {\r\n        \t// check whether pasture should be fully removed and ended at the start of simulation\r\n        \tif(Clock.Today.Date == Clock.StartDate.Date)\r\n        \t{\r\n        \t\tif(RotationHasPasture)\r\n        \t\t{ // default crop at the start of any simulation is pasture\r\n\t        \t\tCurrentCrop = \"Pasture\";\r\n\t        \t}\r\n\t        \telse\r\n\t        \t{ // remove all pasture\r\n\t\t            Pasture.Graze(amount: 0.0, type: \"SetResidueAmount\");\r\n\t\t        \tPasture.EndCrop();\r\n\t        \t}\r\n\t        }\r\n\r\n        \t// check whether year has changed, update rotation year\r\n        \tif(currentYear < Clock.Today.Year)\r\n        \t{\r\n        \t\tcurrentYear += 1;\r\n        \t\tCurrentRotationYear += 1;\r\n        \t\tif(CurrentRotationYear > RotationLength)\r\n        \t\t{ // reset rotation\r\n        \t\t\tCurrentRotationYear = 1;\r\n        \t\t\tif(RotationHasPasture)\r\n        \t\t\t\tCurrentCropIndex = -1;\r\n        \t\t}\r\n\t        }\r\n\r\n\t        // check whether current crop name should be reset\r\n\t        if (daysAfterSowing < 0)\r\n\t        {\r\n\t        \tCurrentCrop = \"None\";\r\n\t        \tdaysAfterSowing = 0;\r\n\t        }\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n        \t// check whether a crop has been sown, update days after sowing counter\r\n            if ((CurrentCrop.ToLower() != \"none\") && (CurrentCropIndex >= 0))\r\n           \t\tdaysAfterSowing += 1;\r\n\r\n\t        if(RotationHasPasture)\r\n\t        {\r\n\t           \t// check whether pasture is to be killed off, then when\r\n\t\t        if(CurrentRotationYear == 1)\r\n\t\t        {\r\n\t        \t\tif (DateUtilities.DatesEqual(pastureKillOffDates[SeasonToKillPasture.ToLower()],Clock.Today))\r\n\t        \t\t\tsetKillOff(\"Pasture\");\r\n\t\t        }\r\n\r\n\t\t        // check whether the pasture is to be re-sown, then when\r\n\t\t        if (CurrentCropIndex == croppingLength)\r\n\t\t        {\r\n\t        \t\tif (DateUtilities.DatesEqual(pastureSowingDates[SeasonToResowPasture.ToLower()],Clock.Today))\r\n\t        \t\t{\r\n\t\t            \tCurrentCrop = \"Pasture\";\r\n\t\t            \tsetSowing(CurrentCrop);\r\n\t        \t\t\tCurrentCropIndex = -1;\r\n\t        \t\t}\r\n\t\t        }\r\n\t\t    }\r\n\t        else \r\n\t        {\r\n\t        \t// check whether crop rotation should be reset\r\n\t\t        if ((CurrentCropIndex == croppingLength))\r\n\t\t        \tCurrentCropIndex = 0;\r\n\t        }\r\n\r\n        \tif ((CurrentCropIndex >= 0) && (CurrentCropIndex < croppingLength))\r\n        \t{\r\n\t        \t// check whether and which crop is to be sown\r\n\t            if(DateUtilities.DatesEqual(cropsInRotation[CurrentCropIndex].SowingDate, Clock.Today))\r\n\t            {\r\n\t            \tCurrentCrop = cropsInRotation[CurrentCropIndex].CropName;\r\n\t            \tsetSowing(CurrentCrop);\r\n\t           \t}\r\n\r\n\t\t\t\t// check whether and which crop is to be harvested\r\n\t\t\t\tif (daysAfterSowing == cropsInRotation[CurrentCropIndex].CropDuration)\r\n\t            {\r\n\t                cropHarvested = cropsInRotation[CurrentCropIndex].CropName;\r\n\t        \t    setHarvest(cropHarvested);\r\n\t           }\r\n\t       }\r\n\t       else\r\n\t       {} // harvest pasture\r\n        }\r\n\r\n        private void setSowing(string cropToSow)\r\n        {\r\n    \t\tdateSown = Clock.Today.ToString(\"dd-MMM\");\r\n    \t\tmySummary.WriteMessage(this,\"Setting the sowing of \" + cropToSow);\r\n    \t\t// set sowing\r\n    \t \tmyZone.Set(\"[CropSowingManager].Script.CropName\", cropToSow);\r\n    \t\tmyZone.Set(\"[CropSowingManager].Script.CropSowingDate\", dateSown);\r\n    \t\t// set fertiliser\r\n    \t \tmyZone.Set(\"[CropsAutomaticFertiliser].Script.CurrentCrop\", cropToSow);\r\n    \t\tmyZone.Set(\"[CropsAutomaticFertiliser].Script.CropSowingDate\", dateSown);\r\n        }\r\n\r\n        private void setHarvest(string cropToHarvest)\r\n        {\r\n    \t\tdateHarvested = Clock.Today.ToString(\"dd-MMM\");\r\n\t\t\tdaysAfterSowing = -1;\r\n\t\t\tCurrentCropIndex +=1;\r\n\r\n    \t    mySummary.WriteMessage(this,\"Setting the harvest of \" + cropToHarvest);\r\n    \t\t// set harvesting\r\n    \t    myZone.Set(\"[CropHarvestManager].Script.CropName\", cropToHarvest);\r\n    \t    myZone.Set(\"[CropHarvestManager].Script.CropHarvestDate\", dateHarvested);\r\n    \t\t// re-set fertiliser\r\n    \t \tmyZone.Set(\"[CropsAutomaticFertiliser].Script.CurrentCrop\", \"None\");\r\n    \t\tmyZone.Set(\"[CropsAutomaticFertiliser].Script.CropSowingDate\", \"dd-mmm\");\r\n        }\r\n\r\n        private void setKillOff(string cropToKill)\r\n        {\r\n    \t    dateHarvested = Clock.Today.ToString(\"dd-MMM\");\r\n\t\t\tCurrentCropIndex = 0;\r\n\t\t\tdaysAfterSowing = -1;\r\n\r\n\t\t\tmySummary.WriteMessage(this,\"Setting kill off \" + cropToKill);\r\n    \t\t// set pasture kill off\r\n    \t    myZone.Set(\"[CropHarvestManager].Script.CropName\", cropToKill);\r\n    \t    myZone.Set(\"[CropHarvestManager].Script.CropHarvestDate\", dateHarvested);\r\n    \t\t// re-set fertiliser\r\n    \t \tmyZone.Set(\"[CropsAutomaticFertiliser].Script.CurrentCrop\", \"None\");\r\n    \t\tmyZone.Set(\"[CropsAutomaticFertiliser].Script.CropSowingDate\",  \"dd-mmm\");\r\n        }\r\n\r\n        [Serializable]\r\n        public class CropsInfo\r\n        { //structure to hold basic data for each crop type/crop management\r\n        \tpublic string CropName;\r\n        \tpublic string SowingDate;\r\n        \tpublic string HarvestingDate;\r\n        \tpublic int CropDuration;\r\n\r\n        \tpublic CropsInfo(string CropName, string SowingDate, string HarvestingDate)\r\n        \t{\r\n        \t\tthis.CropName = CropName;\r\n\t        \tthis.SowingDate = SowingDate;\r\n\t        \tthis.HarvestingDate = HarvestingDate;\r\n\t        \tthis.CropDuration = (DateTime.Parse(HarvestingDate) - DateTime.Parse(SowingDate)).Days;\r\n\t        \tif (this.CropDuration <= 0)\r\n\t        \t\tthis.CropDuration += 365;\r\n        \t}\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "RotationHasPasture",
                      "Value": "False"
                    },
                    {
                      "Key": "CropList",
                      "Value": "SpringBarley,AutumnWheat,AutumnWheat,AutumnBarley,AutumnOatsChop"
                    },
                    {
                      "Key": "RotationLength",
                      "Value": "10"
                    },
                    {
                      "Key": "YearToKillOffPasture",
                      "Value": "1"
                    },
                    {
                      "Key": "SeasonToKillPasture",
                      "Value": "Spring"
                    },
                    {
                      "Key": "SeasonToResowPasture",
                      "Value": "Spring"
                    }
                  ],
                  "Name": "RotationManager",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing Models.Core;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.PMF;\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        //Links to other Apsim modules\r\n        [Link] private Clock Clock;\r\n        [Link] private Weather Weather;\r\n        [Link] private ISummary mySummary = null;\r\n        [Link] private AgPasture.Sward Pasture;\r\n        [ScopedLinkByName] private Plant Wheat;\r\n        [ScopedLinkByName] private Plant Barley;\r\n        [ScopedLinkByName] private Plant Oats;\r\n        [ScopedLinkByName] private Plant FodderBeet;\r\n        [ScopedLinkByName] private Plant FieldPea;\r\n\r\n        //User inputs from properties tab\r\n        [Separator(\"Basic sowing management - parameters will be overwritten by RotationManager\")]\r\n        [Description(\" Name of crop to sow: \")]\r\n        public string CropName { get; set; }\r\n        [Description(\" Crop sowing date (dd-mmm): \")]\r\n        public string CropSowingDate { get; set; }\r\n\r\n        //Internal variables\r\n        private bool cropWasSown;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \tcropWasSown = false;\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n        \t// check whether the name of crop needs to be reset\r\n        \tif (cropWasSown)\r\n        \t{\r\n            \tCropName = \"None\";\r\n        \t\tcropWasSown = false;\r\n        \t}\r\n\r\n        \t// check whether a crop needs to be sown\r\n\t\t\tif(DateUtilities.DatesEqual(CropSowingDate,Clock.Today))\r\n\t\t\t{\r\n\t\t\t\tif(CropName.ToLower() == \"autumnwheat\")\r\n\t\t\t\t{\r\n\t\t\t\t\tWheat.Sow(population:150, cultivar:\"Claire\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"springwheat\")\r\n\t\t\t\t{\r\n\t\t\t\t\tWheat.Sow(population:200, cultivar:\"Claire\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"autumnbarley\")\r\n\t\t\t\t{\r\n\t\t\t\t\tBarley.Sow(population:250, cultivar:\"Tavern\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"springbarley\")\r\n\t\t\t\t{\r\n\t\t\t\t\tBarley.Sow(population:300, cultivar:\"Tavern\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"autumnbarleychop\")\r\n\t\t\t\t{\r\n\t\t\t\t\tBarley.Sow(population:300, cultivar:\"Tavern\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"summerbarleychop\")\r\n\t\t\t\t{\r\n\t\t\t\t\tBarley.Sow(population:300, cultivar:\"Tavern\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"autumnoats\")\r\n\t\t\t\t{\r\n\t\t\t\t\tOats.Sow(population:200, cultivar:\"Milton\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"springoats\")\r\n\t\t\t\t{\r\n\t\t\t\t\tOats.Sow(population:200, cultivar:\"Milton\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"autumnoatschop\")\r\n\t\t\t\t{\r\n\t\t\t\t\tOats.Sow(population:200, cultivar:\"Milton\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"springoatschop\")\r\n\t\t\t\t{\r\n\t\t\t\t\tOats.Sow(population:200, cultivar:\"Milton\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"summeroatschop\")\r\n\t\t\t\t{\r\n\t\t\t\t\tOats.Sow(population:200, cultivar:\"Milton\", depth:30, rowSpacing:250);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower().Contains(\"fodderbeet\"))\r\n\t\t\t\t{ // this can be \"fodderbeetliftedearly\" or \"fodderbeetliftedelate\"\r\n\t\t\t\t\tFodderBeet.Sow(population:9, cultivar:\"Rivage\", depth:20, rowSpacing:450);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"fieldpea\")\r\n\t\t\t\t{\r\n\t\t\t\t\tFieldPea.Sow(population:100, cultivar:\"Massey\", depth:40, rowSpacing:150);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (CropName.ToLower() == \"pasture\")\r\n\t\t\t\t{ // sow AgPasture, with species as defined in 'Sward'\r\n\t\t\t\t    Pasture.Sow(population: 0, cultivar: \"R\", depth: 0, rowSpacing: 0);\r\n\t\t\t\t\tcropWasSown = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "CropName",
                      "Value": "None"
                    },
                    {
                      "Key": "CropSowingDate",
                      "Value": "15-Mar"
                    }
                  ],
                  "Name": "CropSowingManager",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing Models.Core;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.PMF;\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        //Links to other Apsim modules\r\n        [Link] private Clock Clock;\r\n        [Link] private Zone myZone;\r\n        [Link] private Weather Weather;\r\n        [Link] private ISummary mySummary = null;\r\n        [Link] private Surface.SurfaceOrganicMatter mySurfaceOrganicMatter;\r\n        [Link] private AgPasture.Sward Pasture;\r\n        [ScopedLinkByName] private Plant Wheat;\r\n        [ScopedLinkByName] private Plant Barley;\r\n        [ScopedLinkByName] private Plant Oats;\r\n        [ScopedLinkByName] private Plant FodderBeet;\r\n        [ScopedLinkByName] private Plant FieldPea;\r\n\r\n        //User inputs from properties tab\r\n        [Separator(\"Basic crop harvest management - parameters will be overwritten by RotationManager\")]\r\n        [Description(\" Name of crop to harvest: \")]\r\n        public string CropName { get; set; }\r\n        [Description(\" Crop harvest date (dd-mmm): \")]\r\n        public string CropHarvestDate { get; set; }\r\n\r\n        //Manager outputs\r\n        [XmlIgnore][Units(\"kg/ha\")] public double CropYield { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")] public double WheatYield { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")] public double BarleyYield { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")] public double OatsYield { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")] public double FodderBeetYield { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")] public double FieldPeaYield { get; set; }\r\n\r\n        //Internal variables\r\n        private bool cropWasHarvested;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \tcropWasHarvested = false;\r\n        \tCropYield = 0.0;\r\n        \tWheatYield = 0.0;\r\n        \tBarleyYield = 0.0;\r\n        \tOatsYield = 0.0;\r\n        \tFodderBeetYield = 0.0;\r\n        \tFieldPeaYield = 0.0;\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n        \t// check whether the name of crop needs to be reset\r\n        \tif (cropWasHarvested)\r\n        \t{\r\n            \tCropName=\"None\";\r\n        \t\tcropWasHarvested = false;\r\n        \t\tCropYield = 0.0;\r\n\t        \tWheatYield = 0.0;\r\n\t        \tBarleyYield = 0.0;\r\n\t        \tOatsYield = 0.0;\r\n\t        \tFodderBeetYield = 0.0;\r\n\t        \tFieldPeaYield = 0.0;\r\n        \t}\r\n\r\n        \t// check whether a crop needs to be harvested\r\n\t\t\tif(DateUtilities.DatesEqual(CropHarvestDate,Clock.Today))\r\n\t\t\t{\r\n\t\t\t\tif(CropName.ToLower().Contains(\"wheat\"))\r\n\t\t\t\t{ // this can be \"autumnwheat\" or \"springwheat\"\r\n\t\t\t\t\tCropYield = (double)myZone.Get(\"[Wheat].Grain.Wt\");\r\n\t\t\t\t\tWheatYield = CropYield;\r\n\t\t\t\t\tWheat.Harvest();\r\n\t\t\t\t\tWheat.EndCrop();\r\n\t\t\t\t\tmySurfaceOrganicMatter.Incorporate(0.75,0.0);\r\n\t\t\t\t\tcropWasHarvested = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower().Contains(\"barley\"))\r\n\t\t\t\t{// this could be \"autumnbarley\", \"springbarley\", \"autumnbarleychop\" or \"summerbarleychop\"\r\n\t\t\t\t\tif(CropName.ToLower().Contains(\"chop\"))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tCropYield = (double)myZone.Get(\"[Barley].AboveGround.Wt\");\r\n\t\t\t\t\t\tBarley.RemoveBiomass(\"Cut\");\r\n\t\t\t\t\t\tCropYield -= (double)myZone.Get(\"[Barley].AboveGround.Wt\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tCropYield = (double)myZone.Get(\"[Barley].Grain.Wt\");\r\n\t\t\t\t\t\tBarley.Harvest();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tBarleyYield = CropYield;\r\n\t\t\t\t\tBarley.EndCrop();\r\n\t\t\t\t\tmySurfaceOrganicMatter.Incorporate(0.75,0.0);\r\n\t\t\t\t\tcropWasHarvested = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower().Contains(\"oats\"))\r\n\t\t\t\t{// this could be \"autumnoats\", \"springoats\", \"autumnoatschop\", \"springoatschop\" or \"summeroatschop\"\r\n\t\t\t\t\tif(CropName.ToLower().Contains(\"chop\"))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tCropYield = (double)myZone.Get(\"[Oats].AboveGround.Wt\");\r\n\t\t\t\t\t\tOats.RemoveBiomass(\"Cut\");\r\n\t\t\t\t\t\tCropYield -= (double)myZone.Get(\"[Oats].AboveGround.Wt\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tCropYield = (double)myZone.Get(\"[Oats].Grain.Wt\");\r\n\t\t\t\t\t\tOats.Harvest();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tOatsYield = CropYield;\r\n\t\t\t\t\tOats.EndCrop();\r\n\t\t\t\t\tmySurfaceOrganicMatter.Incorporate(0.75,0.0);\r\n\t\t\t\t\tcropWasHarvested = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower().Contains(\"fodderbeet\"))\r\n\t\t\t\t{ // this can be \"fodderbeetliftedearly\" or \"fodderbeetliftedlate\"\r\n\t\t\t\t\tCropYield = (double)myZone.Get(\"[FodderBeet].AboveGround.Wt\");\r\n\t\t\t\t\tFodderBeet.Harvest();\r\n\t\t\t\t\tCropYield -= (double)myZone.Get(\"[FodderBeet].AboveGround.Wt\");\r\n\t\t\t\t\tFodderBeetYield = CropYield;\r\n\t\t\t\t\tFodderBeet.EndCrop();\r\n\t\t\t\t\tmySurfaceOrganicMatter.Incorporate(0.5,0.0);\r\n\t\t\t\t\tcropWasHarvested = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower().Contains(\"fieldpea\"))\r\n\t\t\t\t{\r\n\t\t\t\t\tCropYield = (double)myZone.Get(\"[FieldPea].Grain.Wt\");\r\n\t\t\t\t\tFieldPeaYield = CropYield;\r\n\t\t\t\t\tFieldPea.Harvest();\r\n\t\t\t\t\tFieldPea.EndCrop();\r\n\t\t\t\t\tmySurfaceOrganicMatter.Incorporate(0.75,0.0);\r\n\t\t\t\t\tcropWasHarvested = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if(CropName.ToLower() == \"pasture\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPasture.EndCrop();\r\n\t\t\t\t\tcropWasHarvested = true;\r\n\t\t\t\t\tmySurfaceOrganicMatter.Incorporate(0.5,0.0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "CropName",
                      "Value": "None"
                    },
                    {
                      "Key": "CropHarvestDate",
                      "Value": "15-Feb"
                    }
                  ],
                  "Name": "CropHarvestManager",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing System.Xml.Serialization;\r\nusing System.Linq;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing Models.Soils;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Interfaces;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        // - Links to APSIM models\r\n        [Link] Clock Clock;\r\n        [Link] Zone myZone;\r\n        [Link] Fertiliser myFertiliser;\r\n        [Link] Soil mySoil;\r\n        [Link] ISolute NO3;\r\n        [Link] AgPasture.Sward myPasture;\r\n        [Link] ISummary mySummary = null;\r\n\r\n        // - Parameters for this manager\r\n        [Separator(\"Rules for controlling pasture defoliation and residue management\")]\r\n        [Description(\" Allow this manager to control defoliations? \")]\r\n        public bool ControlDefoliationIsEnabled { get; set; }\r\n        [Description(\" Date to begin the rotation: \")]\r\n        public DateTime CutRotationStartDate { get; set; }\r\n        [Description(\" Date to finish the rotation: \")]\r\n        public DateTime CutRotationEndDate { get; set; }\r\n\r\n        [Separator(\"Parameters defining how the defoliation is managed\")]\r\n        [Description(\" How the defoliations should be triggered? \")]\r\n        public DefoliationTriggerTypes DefoliationTriggerType { get; set; }\r\n        [Description(\"   Minimum number of days between defoliations, used if trigger is an interval: \")]\r\n        public double[] CutIntervalValues { get; set; }\r\n        [Description(\"   Minimum standing biomass to start defoliations, used if trigger is DM target (kg/ha): \")]\r\n        public double[] TargetDMValues { get; set; }\r\n        [Description(\" Duration of each event (days): \")]\r\n        public double[] CutDurationValues { get; set; }\r\n        [Description(\" What amount is being defined? \")]\r\n        public removeAmountTypes RemoveAmountType { get; set; }\r\n        [Description(\" Amount to use (kg/ha): \")]\r\n        public double[] AmountDMValues { get; set; }\r\n\r\n        [Separator(\"Parameters defining the management of the defoliated biomass\")]\r\n        [Description(\" How much of harvested DM (and C) is removed from the simulation? \")]\r\n        public removeDMTypes DMRemoveType { get; set; }\r\n        [Description(\"   Fraction of harvested material to remove, used if UseGivenFraction (0-1):\")]\r\n        public double FractionDM2Remove  { get; set; }\r\n        [Description(\" Fraction of harvested N that is removed from the simulation (0-1):\")]\r\n        public double FractionN2Remove { get; set; }\r\n        [Description(\" How the non-removed material is returned to the soil? \")]\r\n        public returnTypes ReturnType { get; set; }\r\n\r\n        [Separator(\"Parameters used when returning material as dung and urine\")]\r\n        [Description(\" How should the partitioning of N to dung and urine be defined? \")]\r\n        public dungNContentTypes NDungType { get; set; }\r\n        [Description(\"   Proportion of N returned in dung, used if UseGivenProportion (0-1): \")]\r\n        public double ProportionN2Dung { get; set; }\r\n        [Description(\"   The C:N of dung, used if UseGivenCNRatio (typically around 20): \")]\r\n        public double CNRatioDung { get; set; }\r\n        [Description(\" Depth in the soil down to which urine is applied (mm): \")]\r\n        public double UrineDepth { get; set; }\r\n\r\n        // - Outputs from this manager\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Pasture DM defoliated today\r\n        public double DefoliatedWt { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Pasture N defoliate today\r\n        public double DefoliatedN { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Pasture DM harvested today\r\n        public double HarvestedWt { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Pasture N harvested today\r\n        public double HarvestedN { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Pasture DM removed from the field\r\n        public double RemovedWt { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Pasture N removed from the field\r\n        public double RemovedN { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Residue DM returned to the field\r\n        public double ReturnedWt { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Residue N returned to the field\r\n        public double ReturnedN { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Harvested N returned as dung (SurfaceOM)\r\n        public double NReturnedInDung { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Harvested N returned as urine (urea)\r\n        public double NReturnedInUrine { get; set; }\r\n        [XmlIgnore][Units(\"day\")]// Description: Number of days after last defoliation\r\n        public int DaysAfterCut { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut\r\n        public double PreHarvestDM { get; set; }\r\n        [XmlIgnore][Units(\"kg/ha\")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut\r\n        public double PostHarvestDM { get; set; }\r\n        [XmlIgnore][Units(\"\")]// auxiliary flag for defoliation\r\n        public bool aCutHasHappened { get; set; }\r\n\r\n        [XmlIgnore][Units(\"\")] public bool HarvestedToday { get; set; } // auxiliary flag for defoliation\r\n\r\n        // - Internal variables\r\n        // amount of DM to be used in the defoliation (either residual or amout to remove)\r\n        [XmlIgnore] public double amountGiven { get; set; }\r\n        // amount of standing DM that triggers a defoliation (if using this a trigger)\r\n        [XmlIgnore] public double targetStandingBiomass { get; set; }\r\n        // number of days after a defoliation that trigger a new one (if using this a trigger)\r\n        private int intervalBetweenDefoliations;\r\n        // number of days for each defoliation event\r\n        private int cuttingDuration = 0;\r\n        // counter for day within each defoliation\r\n        private int daysCutting = 0;\r\n        // total existing DM harvestable\r\n        private double existingDM;\r\n        // total herbage to remove in kg/ha per day\r\n        private double herbageToRemove;\r\n        // type of DM amount (ResidualDM or DMToRemove)\r\n        private string amountType;\r\n        // fraction of urine that is applied to each layer\r\n        private double[] fractionUrine;\r\n        // number of layers in the soil\r\n        private int nLayers;\r\n\r\n\t    // DoY for each value given for target standing DM\r\n\t    private int[] daysForTargetDMValues;\r\n\t    // DoY for each value given for cut interval\r\n\t    private int[] daysForCutIntervalValues;\r\n\t    // DoY for each value given for amount to cut or residue\r\n\t    private int[] daysForAmountDMValues;\r\n        // DoY for each value given for cut duration\r\n\t    private int[] daysForCutDurationValues;\r\n\r\n        // - Event to add residue or dung to surface OM\r\n        public event BiomassRemovedDelegate BiomassRemoved;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \t// get arrays with DoY for each array variable\r\n        \tdaysForTargetDMValues = setDays(TargetDMValues.Length);\r\n        \tdaysForCutIntervalValues = setDays(CutIntervalValues.Length);\r\n        \tdaysForAmountDMValues = setDays(AmountDMValues.Length);\r\n        \tdaysForCutDurationValues = setDays(CutDurationValues.Length);\r\n\r\n            // reset variables\r\n            DaysAfterCut = 0;\r\n            resetVariables();\r\n            targetStandingBiomass = InterpolateValues(Clock.Today.DayOfYear, daysForTargetDMValues, TargetDMValues);\r\n            intervalBetweenDefoliations = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutIntervalValues, CutIntervalValues);\r\n            amountGiven = InterpolateValues(Clock.Today.DayOfYear, daysForAmountDMValues, AmountDMValues);\r\n            cuttingDuration = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutDurationValues, CutDurationValues);\r\n            HarvestedToday = false;\r\n\r\n            // get the type of amount given\r\n        \tif (RemoveAmountType == removeAmountTypes.ResidualDM)\r\n            \tamountType = \"SetResidueAmount\";\r\n            else\r\n            \tamountType = \"SetRemoveAmount\";\r\n\r\n            // make sure that rotation start when startDate < simulationStartDay\r\n            if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))\r\n                CutRotationStartDate = Clock.Today;\r\n\r\n            // set the fraction of urine for each layer\r\n            nLayers = mySoil.Thickness.Length;\r\n            fractionUrine = new double[nLayers];\r\n            double soilDepth = 0.0;\r\n            double distFactor = 1.5;\r\n            if (ReturnType == returnTypes.AsDungUrine)\r\n            {\r\n                double atZ0;\r\n                double atZ1;\r\n                double totalProp = UrineDepth * Math.Pow(1.0, distFactor) / (distFactor + 1.0);\r\n                \r\n                atZ1 = (UrineDepth - soilDepth) * Math.Pow(1.0 - soilDepth / UrineDepth, distFactor) / (distFactor + 1.0);\r\n                for (int z = 0; z < nLayers; z++)\r\n                {\r\n                    atZ0 = atZ1;\r\n                    soilDepth += mySoil.Thickness[z];\r\n                    atZ1 = (UrineDepth - soilDepth) * Math.Pow(1.0 - soilDepth / UrineDepth, distFactor) / (distFactor + 1);\r\n                    if (1.0 - (soilDepth / UrineDepth) < 0.0)\r\n                        atZ1 = 0;\r\n                    fractionUrine[z] = (atZ0 - atZ1) / totalProp;\r\n                }\r\n            }\r\n\r\n            // write summary\r\n            mySummary.WriteMessage(this, \"Defoliation manager initialisation:\");\r\n            if (ControlDefoliationIsEnabled)\r\n            {\r\n            \tmySummary.WriteMessage(this, \"  Management valid between \" + CutRotationStartDate.ToShortDateString() + \" and \" + CutRotationEndDate.ToShortDateString());\r\n            \tif (DefoliationTriggerType == DefoliationTriggerTypes.TargetStandingBiomass)\r\n            \t{\r\n\t            \tif(TargetDMValues.Length==1)\r\n\t            \t\tmySummary.WriteMessage(this, \"   Defoliation will happen whenever standing biomass is greater than \" + targetStandingBiomass.ToString(\"#0.0\") + \" kg/ha.\");\r\n\t            \telse\r\n\t            \t\tmySummary.WriteMessage(this, \"   Defoliation is triggered by a variable standing biomass (between \" + TargetDMValues.Min().ToString(\"#0.0\") + \" and \" + TargetDMValues.Max().ToString(\"#0.0\") + \" kg/ha).\");\r\n            \t}\r\n            \telse\r\n            \t{\r\n\t            \tif(CutIntervalValues.Length==1)\r\n\t            \t\tmySummary.WriteMessage(this, \"   Defoliation will happen every \" + intervalBetweenDefoliations + \" days.\");\r\n\t            \telse\r\n\t            \t\tmySummary.WriteMessage(this, \"   Defoliation interval is variable along the year (between \" + CutIntervalValues.Min() + \" and \" + CutIntervalValues.Max() + \" days.\");\r\n            \t}\r\n\r\n            \tif (RemoveAmountType == removeAmountTypes.ResidualDM)\r\n\t            {\r\n\t            \tif(AmountDMValues.Length==1)\r\n\t            \t\tmySummary.WriteMessage(this, \"   Removing all biomass down to a residue of \" + amountGiven.ToString(\"#0.0\") + \" kg/ha.\");\r\n\t            \telse\r\n\t            \t\tmySummary.WriteMessage(this, \"   Removing biomass down to a variable residue amount (between \" + AmountDMValues.Min().ToString(\"#0.0\") + \" and \" + AmountDMValues.Max().ToString(\"#0.0\") + \" kg/ha).\");\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t            \tif(AmountDMValues.Length==1)\r\n\t            \t\tmySummary.WriteMessage(this, \"   Removing \" + amountGiven.ToString(\"#0.0\") + \" kg/ha in every event.\");\r\n\t            \telse\r\n\t            \t\tmySummary.WriteMessage(this, \"   Removing a variable biomass amount every event (between \" + AmountDMValues.Min().ToString(\"#0.0\") + \" and \" + AmountDMValues.Max().ToString(\"#0.0\") + \" kg/ha).\");\r\n\t            }\r\n\t        }\r\n        }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            // Check whether defoliation is allowed at all\r\n            HarvestedToday = false;\r\n            if (ControlDefoliationIsEnabled)\r\n            {\r\n                if (Clock.Today == CutRotationStartDate)\r\n                    DaysAfterCut = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutIntervalValues, CutIntervalValues);\r\n\r\n                // Check whether we can defoliate\r\n                if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate)  && myPasture.IsAlive)\r\n                {\r\n                    // Check whether we should start a defoliation\r\n                    if (DefoliationTriggerType == DefoliationTriggerTypes.FixedInterval)\r\n                    {\r\n            \t\t\tintervalBetweenDefoliations = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutIntervalValues, CutIntervalValues);\r\n\t                    if (DaysAfterCut == (intervalBetweenDefoliations - 1))\r\n\t                    {\r\n            \t\t\t\tamountGiven = InterpolateValues(Clock.Today.DayOfYear, daysForAmountDMValues, AmountDMValues);\r\n            \t\t\t\tcuttingDuration = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutDurationValues, CutDurationValues);\r\n\t                        StartDefoliation(amountGiven, amountType, cuttingDuration);\r\n\t\t\t\t\t\t}\r\n                    }\r\n                    else if (DefoliationTriggerType == DefoliationTriggerTypes.TargetInterval)\r\n                    {\r\n            \t\t\tintervalBetweenDefoliations = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutIntervalValues, CutIntervalValues);\r\n                        if (DaysAfterCut >= intervalBetweenDefoliations)\r\n\t                    {\r\n            \t\t\t\tamountGiven = InterpolateValues(Clock.Today.DayOfYear, daysForAmountDMValues, AmountDMValues);\r\n            \t\t\t\tcuttingDuration = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutDurationValues, CutDurationValues);\r\n\t                        StartDefoliation(amountGiven, amountType, cuttingDuration);\r\n\t\t\t\t\t\t}\r\n                    }\r\n                    else  //DefoliationTriggerType == DefoliationTriggerTypes.TargetStandingBiomass\r\n                    {\r\n\t\t            \ttargetStandingBiomass = InterpolateValues(Clock.Today.DayOfYear, daysForTargetDMValues, TargetDMValues);\r\n                    \tif (myPasture.StandingHerbageWt >= targetStandingBiomass)\r\n\t                    {\r\n            \t\t\t\tamountGiven = InterpolateValues(Clock.Today.DayOfYear, daysForAmountDMValues, AmountDMValues);\r\n            \t\t\t\tcuttingDuration = (int)InterpolateValues(Clock.Today.DayOfYear, daysForCutDurationValues, CutDurationValues);\r\n\t                        StartDefoliation(amountGiven, amountType, cuttingDuration);\r\n\t\t\t\t\t\t}\r\n                    }\r\n                }\r\n            }\r\n            //// Note: Only the code above should be limited by 'ControlDefoliationIsEnabled'. This way, the rest of the code\r\n            ////  can still be used. This can be done by calling 'StartDefoliation' from another manager or a schedulle thingy.\r\n\r\n            // Check whether we need to continue cutting\r\n            if ((daysCutting > 0) && (daysCutting < cuttingDuration))\r\n            {\r\n                // reset outputs\r\n                resetVariables();\r\n\r\n                // remove biomass and return residue\r\n                removeDM(herbageToRemove);\r\n                if (ReturnType == returnTypes.AsResidue)\r\n                    returnResidues();\r\n                else\r\n                    returnExcreta();\r\n                daysCutting += 1;\r\n                if (daysCutting == cuttingDuration)\r\n                    PostHarvestDM = myPasture.StandingHerbageWt;\r\n            }\r\n\r\n            // reset outputs\r\n            if (daysCutting < 0)\r\n            {\r\n                resetVariables();\r\n                daysCutting = 0;\r\n            }\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagementCalculations\")]\r\n        private void OnDoManagementCalculations(object sender, EventArgs e)\r\n        {\r\n            // Check whether a cutting has finished\r\n            if (daysCutting == cuttingDuration)\r\n            {\r\n                aCutHasHappened = true;\r\n                daysCutting = -1;\r\n            }\r\n\r\n            // Increase the counter for days after cutting\r\n            if (aCutHasHappened && (daysCutting == 0))\r\n                DaysAfterCut += 1;\r\n        }\r\n\r\n        // Resets the values of all outputs\r\n        private void resetVariables()\r\n        {\r\n            DefoliatedWt = 0.0;\r\n            DefoliatedN = 0.0;\r\n            HarvestedWt = 0.0;\r\n            HarvestedN = 0.0;\r\n            RemovedWt = 0.0;\r\n            RemovedN = 0.0;\r\n            ReturnedWt = 0.0;\r\n            ReturnedN = 0.0;\r\n            NReturnedInDung = 0.0;\r\n            NReturnedInUrine = 0.0;\r\n        }\r\n\r\n        // Description: Perform the basic calculations to start a defoliation\r\n        public void StartDefoliation(double amountDM, string amountType, int duration)\r\n        {\r\n            // Get the existing plant amount\r\n            PreHarvestDM = myPasture.StandingHerbageWt;\r\n            existingDM = myPasture.HarvestableWt;\r\n            HarvestedToday = true;\r\n            \r\n            // Check the amount to remove and print some info\r\n            if ((amountType == \"SetRemoveAmount\") && (existingDM >= amountDM / duration))\r\n            {\r\n                mySummary.WriteMessage(this, \"   Defoliating \" + amountDM.ToString(\"#0.0\") + \"kg/ha over \" + duration + \" days\");\r\n                herbageToRemove = amountDM / duration;\r\n            }\r\n            else if ((amountType == \"SetResidueAmount\") && (existingDM >= amountDM))\r\n            {\r\n                mySummary.WriteMessage(this, \"   Defoliating down to approximately \" + amountDM.ToString(\"#0.0\") + \"kg/ha over \" + duration + \" days\");\r\n                herbageToRemove = (PreHarvestDM - amountDM) / duration;\r\n            }\r\n            else\r\n            {\r\n\t            mySummary.WriteMessage(this, \"   Defoliation will not happend because there is not enough plant material\");\r\n                if (DefoliationTriggerType == DefoliationTriggerTypes.FixedInterval)\r\n                    DaysAfterCut = -duration;\r\n                return;\r\n            }\r\n\r\n            cuttingDuration = duration;\r\n            // Perform first defoliation\r\n            removeDM(herbageToRemove);\r\n            if (ReturnType == returnTypes.AsResidue)\r\n                returnResidues();\r\n            else\r\n                returnExcreta();\r\n            daysCutting = 1;\r\n            DaysAfterCut = 0;\r\n            if (daysCutting == cuttingDuration)\r\n                PostHarvestDM = myPasture.StandingHerbageWt;\r\n        }\r\n\r\n        // Do the DM removal\r\n        private void removeDM(double removeAmount)\r\n        {\r\n            myPasture.Graze(amount: removeAmount, type: \"SetRemoveAmount\");\r\n            \r\n            // get total harvested\r\n            DefoliatedWt = myPasture.HarvestedWt;\r\n            DefoliatedN = myPasture.HarvestedN;\r\n            HarvestedWt = DefoliatedWt;\r\n            HarvestedN = DefoliatedN;\r\n\r\n            // get amounts actually removed from field and that to be returned (dung/urine)\r\n            if (DMRemoveType == removeDMTypes.RemoveAll)\r\n                FractionDM2Remove = 1.0;\r\n            else if (DMRemoveType == removeDMTypes.RemoveNone)\r\n                FractionDM2Remove = 0.0;\r\n            else if (DMRemoveType == removeDMTypes.BasedOnDigestibility)\r\n                FractionDM2Remove = myPasture.HarvestedDigestibility; \r\n            // else UseGivenFraction = FractionDM2Remove\r\n\r\n            RemovedWt = HarvestedWt * FractionDM2Remove;\r\n            RemovedN = HarvestedN * FractionN2Remove;\r\n            ReturnedWt = HarvestedWt - RemovedWt;\r\n            ReturnedN = HarvestedN - RemovedN;\r\n            \r\n            if (ReturnType == returnTypes.AsDungUrine)\r\n            {\r\n                if (NDungType == dungNContentTypes.UseGivenProportion)\r\n                    NReturnedInDung = ReturnedN * ProportionN2Dung;\r\n                else\r\n                    NReturnedInDung = Math.Min(ReturnedN, ReturnedWt * 0.4 / CNRatioDung);\r\n                NReturnedInUrine = ReturnedN - NReturnedInDung;\r\n            }\r\n            else\r\n            {\r\n                NReturnedInDung = 0.0;\r\n                NReturnedInUrine = 0.0;\r\n            }\r\n        }\r\n\r\n        // Return dung and urine\r\n        private void returnExcreta()\r\n        {\r\n            if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))\r\n            {\r\n                PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();\r\n                string[] type = new string[] { \"RuminantDung_PastureFed\" };\r\n                float[] dltdm = new float[] { (Single)ReturnedWt };\r\n                float[] dltn = new float[] { (Single)NReturnedInDung };\r\n                float[] dltp = new float[] { 0 };\r\n                float[] fraction = new float[] { 1 };     // fraction is always 1.0 here\r\n\r\n                BiomassDung.crop_type = \"RuminantDung_PastureFed\";\r\n                BiomassDung.dm_type = type;\r\n                BiomassDung.dlt_crop_dm = dltdm;\r\n                BiomassDung.dlt_dm_n = dltn;\r\n                BiomassDung.dlt_dm_p = dltp;\r\n                BiomassDung.fraction_to_residue = fraction;\r\n                BiomassRemoved.Invoke(BiomassDung);\r\n            }\r\n\r\n            if (NReturnedInUrine > 0.0)\r\n            {\r\n                double[] myUrineDeposition = new double[nLayers];\r\n                for (int z = 0; z < nLayers; z++)\r\n                    myUrineDeposition[z] = NReturnedInUrine * fractionUrine[z];\r\n\r\n                NO3.AddKgHaDelta(SoluteSetterType.Fertiliser, myUrineDeposition);\r\n            }\r\n        }\r\n\r\n        // Return pasture residues\r\n        private void returnResidues()\r\n        {\r\n            if ((ReturnedWt > 0.0) || (ReturnedN > 0.0))\r\n            {\r\n                PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();\r\n                string[] type = new string[] { \"Grass\" };\r\n                float[] dltdm = new float[] { (Single)ReturnedWt };\r\n                float[] dltn = new float[] { (Single)ReturnedN };\r\n                float[] dltp = new float[] { 0 };\r\n                float[] fraction = new float[] { 1 };     // fraction is always 1.0 here\r\n\r\n                BiomassDung.crop_type = \"Grass\";\r\n                BiomassDung.dm_type = type;\r\n                BiomassDung.dlt_crop_dm = dltdm;\r\n                BiomassDung.dlt_dm_n = dltn;\r\n                BiomassDung.dlt_dm_p = dltp;\r\n                BiomassDung.fraction_to_residue = fraction;\r\n                BiomassRemoved.Invoke(BiomassDung);\r\n            }\r\n        }\r\n\r\n        //Compute the day of year for intervals given by number of dates (array's length)\r\n   \t\tprivate int[] setDays(int numDates)\r\n   \t\t{\r\n      \t\t//to be used for interpolations of values within the year - first value, day=1; last value day = 365; dates in between are spread evenly (rounded)\r\n      \t\tint[] daysArray;\r\n\t\t    if (numDates < 366)\r\n      \t\t{\r\n      \t\t\tdaysArray = new int[numDates];\r\n      \t\t\tdaysArray[0] = 1;\r\n      \t\t\tif(numDates>1)\r\n      \t\t\t{\r\n      \t\t\t\tdaysArray[numDates-1] = 365;\r\n\t      \t\t\tfor (int i = 1; i < numDates - 1; i++)\r\n\t      \t\t\t{\r\n\t      \t\t\t\tdaysArray[i] = 365*i / numDates;\r\n\t      \t\t\t}\r\n\t      \t\t}\r\n\t\t    }\r\n      \t\telse\r\n      \t\t{\r\n         \t\tthrow new Exception(\"Number of items on arrays is greater than maximum allowed (365)\");\r\n      \t\t}\r\n\r\n      \t\treturn daysArray;\r\n   \t\t}\r\n\r\n   \t\t// compute interpolated values\r\n\t\tprivate double InterpolateValues(int newX, int[] xArray, double[] yArray)\r\n\t\t{\r\n\t\t\t//Find out the value of newY corresponding to newX in the 'broken stick' function described by the x and y arrays\r\n\t\t\tdouble newY = 0.0;\r\n\t\t\tint nVals = xArray.Length - 1;\r\n\t\t\tif (newX <= xArray[0])\r\n\t\t\t{\r\n\t\t\t \t//values below x[0] are set to y[0]\r\n\t\t\t \tnewY = yArray[0];\r\n\t\t\t}\r\n\t\t\telse if (newX >= xArray[nVals])\r\n\t\t\t{\r\n\t\t\t \t//value above x(n) are set to y(n)\r\n\t\t\t \tnewY = yArray[nVals];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//find the nearest neighbours and interpolate (linear)\r\n\t\t\t\tfor (int i = 1; i <= nVals; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (newX <= xArray[i])\r\n\t\t\t\t    {\r\n\t\t\t\t    \tnewY = yArray[i - 1] + ((newX - xArray[i - 1]) * (yArray[i] - yArray[i - 1]) / (xArray[i] - xArray[i - 1]));\r\n\t\t\t\t       \ti = nVals + 1;\r\n\t\t\t\t    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn newY;\r\n\t\t}\r\n\r\n        // Auxiliary bits and pieces  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n        public enum removeAmountTypes\r\n        {\r\n            /// <summary>Setting DM amount to remove</summary>\r\n            DMToRemove,\r\n            /// <summary>Setting residual DM amount</summary>\r\n            ResidualDM\r\n        }\r\n\r\n        /// <summary>Flag how defoliations will be triggered</summary>\r\n        public enum DefoliationTriggerTypes\r\n        {\r\n            /// <summary>Setting a fixed interval</summary>\r\n            FixedInterval,\r\n            /// <summary>Setting a target (minimum) inteval</summary>\r\n            TargetInterval,\r\n            /// <summary>Setting a target (maximum) standing biomass</summary>\r\n            TargetStandingBiomass\r\n        }\r\n\r\n        public enum removeDMTypes\r\n        {\r\n            /// <summary>Remove all DM</summary>\r\n            RemoveAll,\r\n            /// <summary>Remove no DM</summary>\r\n            RemoveNone,\r\n            /// <summary>Remove a fraction based on digestibility</summary>\r\n            BasedOnDigestibility,\r\n            /// <summary>Remove a user-defined fraction</summary>\r\n            UseGivenFraction\r\n        }\r\n\r\n        public enum returnTypes\r\n        {\r\n            /// <summary>Return plant material as residue</summary>\r\n            AsResidue,\r\n            /// <summary>Return meterial as dung and urine</summary>\r\n            AsDungUrine\r\n        }\r\n\r\n        public enum dungNContentTypes\r\n        {\r\n            /// <summary>Use a given proportion of N returned as dung</summary>\r\n            UseGivenProportion,\r\n            /// <summary>Use a given C:N of dung</summary>\r\n            UseGivenCNratio,\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "ControlDefoliationIsEnabled",
                      "Value": "False"
                    },
                    {
                      "Key": "CutRotationStartDate",
                      "Value": "1900-01-01"
                    },
                    {
                      "Key": "CutRotationEndDate",
                      "Value": "2100-12-31"
                    },
                    {
                      "Key": "DefoliationTriggerType",
                      "Value": "TargetStandingBiomass"
                    },
                    {
                      "Key": "CutIntervalValues",
                      "Value": "21"
                    },
                    {
                      "Key": "TargetDMValues",
                      "Value": "2500,2500,2500,2500,2000,2000,2000,2500,2500,2500,2500,2500,2500"
                    },
                    {
                      "Key": "CutDurationValues",
                      "Value": "1"
                    },
                    {
                      "Key": "RemoveAmountType",
                      "Value": "ResidualDM"
                    },
                    {
                      "Key": "AmountDMValues",
                      "Value": "1300,1300,1300,1300,1600,1600,1600,1300,1300,1300,1300,1300,1300"
                    },
                    {
                      "Key": "DMRemoveType",
                      "Value": "BasedOnDigestibility"
                    },
                    {
                      "Key": "FractionDM2Remove",
                      "Value": "0.1"
                    },
                    {
                      "Key": "FractionN2Remove",
                      "Value": "0.2"
                    },
                    {
                      "Key": "ReturnType",
                      "Value": "AsDungUrine"
                    },
                    {
                      "Key": "NDungType",
                      "Value": "UseGivenProportion"
                    },
                    {
                      "Key": "ProportionN2Dung",
                      "Value": "0.4"
                    },
                    {
                      "Key": "CNRatioDung",
                      "Value": "0"
                    },
                    {
                      "Key": "UrineDepth",
                      "Value": "250"
                    }
                  ],
                  "Name": "PastureHarvestManager",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Core;\r\nusing Models.Interfaces;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        //Links to other Apsim modules\r\n        [Link] private Clock Clock;\r\n        [Link] private Irrigation Irrigation;\r\n        [Link] private Soils.Soil mySoil;\r\n        [Link] private ISummary mySummary = null;\r\n        [Link(IsOptional = true)] private IPlant[] cropsInTheSimulation;\r\n       \r\n        //User inputs from properties tab\r\n        [Separator(\"Generic automatic irrigation management\")]\r\n        [Description(\"Allow this manager to control irrigation? \")]\r\n        public bool IrrigationManagementIsEnabled { get; set; }\r\n        [Description(\"Start of irrigation season (dd-mmm): \")]\r\n        public string SeasonStart { get; set; }\r\n        [Description(\"End of irrigation season (dd-mmm): \")]\r\n        public string SeasonEnd { get; set; }\r\n        [Description(\"Water allocation for a season (mm): \")]\r\n        public double SeasonsAllocation { get; set; }\r\n        [Description(\"Deficit to trigger irrigation (% PAWC): \")]\r\n        public double TriggerDeficit { get; set; }\r\n        [Description(\"Deficit to stop irrigaton (% PAWC): \")]\r\n        public double TargetDeficit { get; set; }\r\n        [Description(\"Minimum days for irrigation to return: \")]\r\n        public double ReturnDays { get; set; }\r\n        [Description(\"Maximum irrigation application (mm/day): \")]\r\n        public double MaximumAmount { get; set; }\r\n        [Description(\"Soil depth to calculate PAWC (mm): \")]\r\n        public double DepthOfTopsoil { get; set; }\r\n\r\n        //Manager outputs\r\n        [XmlIgnore][Units(\"mm\")] public double TopsoilWaterDeficit { get; set; }\r\n        [XmlIgnore][Units(\"mm\")] public double TopsoilWaterContent { get; set; }\r\n        [XmlIgnore][Units(\"days\")] public double DaysSinceLastIrrigation { get; set; }\r\n        [XmlIgnore][Units(\"kgN/ha\")] public double AmountToApply { get; set; }\r\n        [XmlIgnore][Units(\"mm\")] public double SeasonAppliedAmount { get; set; }\r\n        [XmlIgnore][Units(\"\")] public bool IrrigationTriggered { get; set; }\r\n\r\n        //Internal variables\r\n        private bool seasonIsOpen { get; set; }\r\n        private bool cropIsActive { get; set; }\r\n        private bool irrigatorIsAvailable { get; set; }\r\n        private bool soilIsDry { get; set; }\r\n        private double topSoilDUL;\r\n        private double topSoilLL;\r\n        private double[] fracLayer;\r\n    \r\n        //Calculate static Soil variables\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {   \r\n            //Calculate soil water variables\r\n            topSoilLL = 0.0;\r\n            topSoilDUL = 0.0;\r\n            double depthFromSurface = 0.0;\r\n            int nLayers = mySoil.Thickness.Length;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            {\r\n                depthFromSurface += mySoil.Thickness[layer];\r\n            \tif (depthFromSurface >= DepthOfTopsoil)\r\n            \t{\r\n            \t\tfracLayer = new double[layer + 1];\r\n            \t\tfor (int z = 0; z < layer; z++)\r\n            \t\t{\r\n            \t\t\tfracLayer[z] = 1.0;\r\n\t\t\t            topSoilLL += mySoil.LL15mm[layer];\r\n\t\t                topSoilDUL += mySoil.DULmm[layer];\r\n\t\t            }\r\n\r\n            \t\tfracLayer[layer] = Math.Min(1.0, (DepthOfTopsoil - depthFromSurface + mySoil.Thickness[layer]) / mySoil.Thickness[layer]);\r\n\t\t            topSoilLL += mySoil.LL15mm[layer] * fracLayer[layer];\r\n\t                topSoilDUL += mySoil.DULmm[layer] * fracLayer[layer];\r\n                    layer = mySoil.Thickness.Length;\r\n                }\r\n            }\r\n\r\n            mySummary.WriteMessage(this,\" Automatic irrigation manager initialised\");\r\n            if(IrrigationManagementIsEnabled)\r\n            {\r\n            \tmySummary.WriteMessage(this,\"   Irrigation will be applied between \" + SeasonStart + \" and \" + SeasonEnd \r\n            \t+ \", every time the water deficit is greater than \" + TriggerDeficit.ToString(\"#0.0\") + \" mm\");\r\n            }\r\n            else\r\n\t            mySummary.WriteMessage(this,\"   Irrigation manager is currently disabled\");\r\n        }\r\n             \r\n        //Determine daily requirement for irrigation\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n        \t// reset some variables\r\n        \tIrrigationTriggered = false;\r\n        \tAmountToApply = 0.0;\r\n\r\n        \t// get today's soils water deficit\r\n            TopsoilWaterContent = 0.0;\r\n            for (int layer = 0; layer < fracLayer.Length; layer++)\r\n\t            TopsoilWaterContent += mySoil.SoilWater.SWmm[layer] * fracLayer[layer];\r\n            TopsoilWaterDeficit = TopsoilWaterContent - topSoilDUL;\r\n\r\n            // evaluate whether a irrigation can be applied\r\n        \tif (IrrigationManagementIsEnabled)\r\n        \t{\r\n\t            // check whether we are within the irrigation season\r\n\t            seasonIsOpen = DateUtilities.WithinDates(SeasonStart,Clock.Today,SeasonEnd);\r\n\r\n\t            // check whether there is a crop in the ground that needs irrigation\r\n\t            cropIsActive = false;\r\n\t            if (cropsInTheSimulation != null)\r\n\t            {\r\n\t\t            foreach(IPlant crop in cropsInTheSimulation)\r\n\t\t            {\r\n\t\t            \tif(crop.IsAlive)\r\n\t\t            \t{\r\n\t\t            \t\tcropIsActive = true;\r\n\t\t            \t\tbreak;\r\n\t\t            \t}\r\n\t\t            }\r\n\t\t        }\r\n\t          \r\n\t            // check whether the irrigator is available\r\n\t            irrigatorIsAvailable = false;\r\n\t            DaysSinceLastIrrigation += 1;\r\n\t            if (DaysSinceLastIrrigation >= ReturnDays)\r\n\t                irrigatorIsAvailable = true;\r\n\t          \r\n\t            // check whether the soil is dry enough to require irrigation\r\n\t            soilIsDry = false;\r\n\t            if (Math.Max(0.0, -TopsoilWaterDeficit) >= (topSoilDUL - topSoilLL) * (100 - TriggerDeficit) / 100)\r\n\t                soilIsDry = true;\r\n\r\n\t            // are all the conditions ratifying irrigation?\r\n\t            if (seasonIsOpen && cropIsActive && irrigatorIsAvailable && soilIsDry)\r\n\t            {\r\n\t                //lets bloody well irrigate then!!!!\r\n\t                AmountToApply = Math.Min(MaximumAmount, topSoilDUL * TargetDeficit / 100 - TopsoilWaterContent);\r\n\t                AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, SeasonsAllocation - SeasonAppliedAmount));\r\n\t                Irrigation.Apply(AmountToApply);\r\n\t                DaysSinceLastIrrigation = 0;\r\n\t                SeasonAppliedAmount += AmountToApply;\r\n\t                IrrigationTriggered = true;\r\n\t            }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "IrrigationManagementIsEnabled",
                      "Value": "False"
                    },
                    {
                      "Key": "SeasonStart",
                      "Value": "15-Oct"
                    },
                    {
                      "Key": "SeasonEnd",
                      "Value": "01-May"
                    },
                    {
                      "Key": "SeasonsAllocation",
                      "Value": "10000"
                    },
                    {
                      "Key": "TriggerDeficit",
                      "Value": "50"
                    },
                    {
                      "Key": "TargetDeficit",
                      "Value": "90"
                    },
                    {
                      "Key": "ReturnDays",
                      "Value": "0"
                    },
                    {
                      "Key": "MaximumAmount",
                      "Value": "25"
                    },
                    {
                      "Key": "DepthOfTopsoil",
                      "Value": "500"
                    }
                  ],
                  "Name": "AutomaticIrrigation",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing Models.Core;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Interfaces;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //Links to other Apsim modules\r\n        [Link] private Clock Clock;\r\n        [Link] private Soils.Soil mySoil;\r\n        [ScopedLinkByName] private ISolute NO3;\r\n        [ScopedLinkByName] private ISolute NH4;\r\n        [ScopedLinkByName] private ISolute Urea;\r\n        [Link] private Fertiliser myFertiliser;\r\n        [Link] private ISummary mySummary;\r\n\r\n        //User inputs from properties tab\r\n        [Separator(\"Generic automatic management of N fertiliser\")]\r\n        [Description(\"Allow this manager to control fertiliser applications? \")]\r\n        public bool FertiliserManagementIsEnabled { get; set; }\r\n        [Description(\"Start of period when fertilise can be applied (dd-mmm): \")]\r\n        public string SeasonStart { get; set; }\r\n        [Description(\"End of period when fertilise can be applied (dd-mmm): \")]\r\n        public string SeasonEnd { get; set; }\r\n        [Description(\"Soil depth over which available N is calculated (mm): \")]\r\n        public double DepthOfTopsoil { get; set; }\r\n        [Description(\"Minimum available N, triggers an application (kgN/ha): \")]\r\n        public double CriticalSoilN { get; set; }\r\n        [Description(\"Amount of N fertiliser for each application (kgN/ha): \")]\r\n        public double FertNAmount { get; set; }\r\n        [Description(\"Type of N fertiliser to apply: \")]\r\n        public Fertiliser.Types FertType { get; set; }\r\n        [Description(\"Minimum period between applications (days): \")]\r\n        public double ReturnDays { get; set; }\r\n\r\n        //Manager outputs\r\n        [XmlIgnore][Units(\"kgN/ha\")] public double TopsoilMineralN { get; set; }\r\n\r\n        //Internal variables\r\n        private DateTime lastApplicationDate;\r\n        private double[] fracLayer;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \t// get the number and fraction of layers in the 'top' soil (where mineral N is measured)\r\n            double depthFromSurface = 0.0;\r\n            int nLayers = mySoil.Thickness.Length;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            {\r\n                depthFromSurface += mySoil.Thickness[layer];\r\n                if (depthFromSurface >= DepthOfTopsoil)\r\n                { // bottom layer found\r\n                    fracLayer = new double[layer + 1];\r\n                    for (int z = 0; z < layer; z++)\r\n                    \tfracLayer[z] = 1.0;\r\n            \t\tfracLayer[layer] = Math.Min(1.0, (DepthOfTopsoil - depthFromSurface + mySoil.Thickness[layer]) / mySoil.Thickness[layer]);\r\n                    layer = mySoil.Thickness.Length;\r\n                }\r\n            }\r\n\r\n            mySummary.WriteMessage(this,\" Automatic crop fertiliser manager initialised\");\r\n            if(FertiliserManagementIsEnabled)\r\n            {\r\n\t            mySummary.WriteMessage(this,\"   Fertiliser will be applied between \" + SeasonStart + \" and \" + SeasonEnd\r\n\t            + \" every time soil mineral N falls below \" + CriticalSoilN.ToString(\"#0.0\") + \" kgN/ha\");\r\n\t        }\r\n            else\r\n\t            mySummary.WriteMessage(this,\"   Fertiliser manager is currently disabled\");\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;\r\n            \r\n            // get the N stored in the mySoil\r\n            TopsoilMineralN = 0.0;\r\n            for (int layer = 0; layer < fracLayer.Length; layer++)\r\n                TopsoilMineralN += (NO3.kgha[layer] + NH4.kgha[layer] + Urea.kgha[layer]) * fracLayer[layer];\r\n\r\n            if (FertiliserManagementIsEnabled)\r\n            {\r\n\t            if((daysSinceLastApplication >= ReturnDays) && (TopsoilMineralN <= CriticalSoilN))\r\n\t            {\r\n\t                myFertiliser.Apply(Amount: FertNAmount, Type: FertType);\r\n\t                lastApplicationDate = Clock.Today;\r\n\t            }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "FertiliserManagementIsEnabled",
                      "Value": "False"
                    },
                    {
                      "Key": "SeasonStart",
                      "Value": "15-Aug"
                    },
                    {
                      "Key": "SeasonEnd",
                      "Value": "15-May"
                    },
                    {
                      "Key": "DepthOfTopsoil",
                      "Value": "600"
                    },
                    {
                      "Key": "CriticalSoilN",
                      "Value": "20"
                    },
                    {
                      "Key": "FertNAmount",
                      "Value": "20"
                    },
                    {
                      "Key": "FertType",
                      "Value": "UreaN"
                    },
                    {
                      "Key": "ReturnDays",
                      "Value": "15"
                    }
                  ],
                  "Name": "AutomaticFertiliser",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing Models.Core;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.Interfaces;\r\nusing Models.Soils;\r\nusing Models.PMF;\r\n\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //Links to other Apsim modules\r\n        [Link] private Clock Clock;\r\n        [Link] private Soils.Soil mySoil;\r\n        [ScopedLinkByName] private ISolute NO3;\r\n        [ScopedLinkByName] private ISolute NH4;\r\n        [ScopedLinkByName] private ISolute Urea;\r\n        [Link] private Fertiliser myFertiliser;\r\n        [Link] private ISummary mySummary;\r\n        [Link(IsOptional = true)] private IPlant[] cropsInTheSimulation;\r\n\r\n        //User inputs from properties tab\r\n        [Separator(\"Generic automatic management for N fertiliser in crops\")]\r\n        [Description(\"Allow this manager to control fertiliser applications? \")]\r\n        public bool FertiliserManagementIsEnabled { get; set; }\r\n        [Description(\"Name of current crop: \")]\r\n        public string CurrentCrop { get; set; }\r\n        [Description(\"Crop sowing date (dd-mmm): \")]\r\n        public string CropSowingDate { get; set; }\r\n        [Description(\"Use soil test to refine fertiliser management? \")]\r\n        public bool SoilTestIsEnabled { get; set; }\r\n\r\n        [Separator(\"Specific parameters if using soil test\")]\r\n        [Description(\"Soil depth over which available N is calculated (mm): \")]\r\n        public double DepthOfTopsoil { get; set; }\r\n        [Description(\"Minimum available soil N, triggers an application (kgN/ha): \")]\r\n        public double CriticalSoilN { get; set; }\r\n        [Description(\"Minimum amount of N fertiliser that can be applied (kgN/ha): \")]\r\n        public double MinimumAmountToApply { get; set; }\r\n        [Description(\"Minimum period between fertiliser applications (days): \")]\r\n        public double ReturnDays { get; set; }\r\n\r\n        //Manager outputs\r\n        [XmlIgnore][Units(\"kgN/ha\")] public double TopsoilMineralN { get; set; }\r\n        [XmlIgnore][Units(\"kgN/ha\")] public double AmountToApply { get; set; }\r\n       \r\n        //Internal variables\r\n        private string cropBeingFertilised;\r\n        private double cropPotentialNUptake;\r\n        private string topDressingStartDate;\r\n        private string topDressingEndDate;\r\n        private string[] topDressingFixedDates;\r\n        private double proportionToApplyAtSowing;\r\n        private double proportionToApplyEachTopDressing;\r\n        private int numberOfApplicationsForTopDressing;\r\n        private double baseAmount;\r\n        private DateTime lastApplicationDate;\r\n        private double daysSinceLastApplication;\r\n\r\n        private bool seasonIsOpen { get; set; }\r\n        private bool cropIsActive { get; set; }\r\n        private bool fertilserApplicatorIsAvailable { get; set; }\r\n        private bool soilIsDeficient { get; set; }\r\n\r\n        private double[] fracLayer;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \t// get the number and fraction of layers in the 'top' soil (where mineral N is measured)\r\n            double depthFromSurface = 0.0;\r\n            int nLayers = mySoil.Thickness.Length;\r\n            for (int layer = 0; layer < nLayers; layer++)\r\n            {\r\n                depthFromSurface += mySoil.Thickness[layer];\r\n                if (depthFromSurface >= DepthOfTopsoil)\r\n                { // bottom layer found\r\n                    fracLayer = new double[layer + 1];\r\n                    for (int z = 0; z < layer; z++)\r\n                    \tfracLayer[z] = 1.0;\r\n            \t\tfracLayer[layer] = Math.Min(1.0, (DepthOfTopsoil - depthFromSurface + mySoil.Thickness[layer]) / mySoil.Thickness[layer]);\r\n                    layer = mySoil.Thickness.Length;\r\n                }\r\n            }\r\n\r\n            cropBeingFertilised = \"None\";\r\n            CurrentCrop = \"Pasture\";\r\n\r\n            mySummary.WriteMessage(this,\" Automatic crop fertiliser manager initialised\");\r\n            if(FertiliserManagementIsEnabled)\r\n            {\r\n            \tif(SoilTestIsEnabled)\r\n            \t{\r\n\t            \tmySummary.WriteMessage(this,\"   Fertiliser will be applied within given windows every time soil mineral N falls below \" \r\n\t            \t+ CriticalSoilN.ToString(\"#0.0\") + \" kgN/ha\");\r\n\t            }\r\n\t            else\r\n\t            \tmySummary.WriteMessage(this,\"   Fertiliser will be applied according to schedule rules\"); \r\n            }\r\n            else\r\n\t            mySummary.WriteMessage(this,\"   Fertiliser manager is currently disabled\");\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n            // get the N available in the soil\r\n            TopsoilMineralN = 0.0;\r\n            for (int layer = 0; layer < fracLayer.Length; layer++)\r\n                TopsoilMineralN += (NO3.kgha[layer] + NH4.kgha[layer] + Urea.kgha[layer]) * fracLayer[layer];\r\n\r\n        \t// check whether a new crop is in the field\r\n        \tif (CurrentCrop != cropBeingFertilised)\r\n        \t{\r\n        \t\tSetFertiliserManagementParameters(CurrentCrop, CropSowingDate);\r\n        \t\tcropBeingFertilised = CurrentCrop;\r\n        \t}\r\n\r\n            // evaluate whether fertiliser can be applied\r\n            if (FertiliserManagementIsEnabled && (CurrentCrop != \"None\") && (cropPotentialNUptake > 0.0))\r\n            {\r\n        \t\t// are we within the fertiliser season?\r\n\t\t\t\tseasonIsOpen = false;\r\n        \t\tif (DateUtilities.DatesEqual(CropSowingDate, Clock.Today))\r\n        \t\t{ // get fertiliser to apply on sowing\r\n\t            \tseasonIsOpen = true;\r\n\t            \tbaseAmount = proportionToApplyAtSowing * cropPotentialNUptake;\r\n\t            }\r\n\t            else if(numberOfApplicationsForTopDressing > 0)\r\n\t            { // get fertiliser to apply as top dressing\r\n\t        \t\tif (SoilTestIsEnabled)\r\n\t        \t\t{\r\n\t\t\t            if (cropBeingFertilised == \"Pasture\")\r\n\t\t\t            {\r\n\t\t\t\t        \tforeach (string givenDate in topDressingFixedDates)\r\n\t\t\t\t        \t{\r\n\t\t\t\t        \t\tif (DateUtilities.DatesEqual(givenDate, Clock.Today))\r\n\t\t\t\t        \t\t{\r\n\t\t\t\t\t            \tbaseAmount = proportionToApplyEachTopDressing * cropPotentialNUptake;\r\n\t\t\t\t\t            \tseasonIsOpen = true;\r\n\t\t\t\t\t            \tbreak;\r\n\t\t\t\t\t            }\r\n\t\t\t\t        \t}\r\n\t\t\t        \t}\r\n\t\t\t        \telse\r\n\t\t\t        \t{\r\n\t\t\t\t            if(DateUtilities.WithinDates(topDressingStartDate, Clock.Today, topDressingEndDate))\r\n\t\t\t        \t\t{\r\n\t\t\t\t            \tseasonIsOpen = true;\r\n\t\t\t\t            \tbaseAmount = proportionToApplyEachTopDressing * cropPotentialNUptake;\r\n\t\t\t\t            }\r\n\t\t\t        \t}\r\n\t\t\t        }\r\n\t\t\t        else if (numberOfApplicationsForTopDressing > 0)\r\n\t\t\t        { //scheduled applications\r\n\t\t\t        \tforeach (string givenDate in topDressingFixedDates)\r\n\t\t\t        \t{\r\n\t\t\t        \t\tif (DateUtilities.DatesEqual(givenDate, Clock.Today))\r\n\t\t\t        \t\t{\r\n\t\t\t\t            \tbaseAmount = proportionToApplyEachTopDressing * cropPotentialNUptake;\r\n\t\t\t\t            \tseasonIsOpen = true;\r\n\t\t\t\t            \tbreak;\r\n\t\t\t\t            }\r\n\t\t\t        \t}\r\n\t\t\t        }\r\n\t\t\t    }\r\n\r\n\t            // is there a crop in the ground that needs fertiliser?\r\n\t            cropIsActive = false;\r\n\t            if (cropsInTheSimulation != null)\r\n\t            {\r\n\t\t            foreach(IPlant crop in cropsInTheSimulation)\r\n\t\t            {\r\n\t\t            \tif(crop.IsAlive)\r\n\t\t            \t{\r\n\t\t            \t\tcropIsActive = true;\r\n\t\t            \t\tbreak;\r\n\t\t            \t}\r\n\t\t            }\r\n\t            }\r\n\t          \r\n\t            // is the fertiliser applicator available?\r\n\t            daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;\r\n\t            fertilserApplicatorIsAvailable = false;\r\n\t            if (daysSinceLastApplication >= ReturnDays)\r\n\t                fertilserApplicatorIsAvailable = true;\r\n\r\n\t            // is the soil N low enough to require fertiliser?\r\n\t            if (SoilTestIsEnabled)\r\n\t            { // attempting to maintain soil N above the critical value\r\n\t\t            soilIsDeficient = false;\r\n\t\t            if (cropBeingFertilised == \"Pasture\")\r\n\t\t            {\r\n\t\t\t            if (TopsoilMineralN < 35.0)\r\n\t\t\t                soilIsDeficient = true;\r\n\t\t            }\r\n\t\t            else\r\n\t\t            {\r\n\t\t\t            if (TopsoilMineralN < CriticalSoilN)\r\n\t\t\t                soilIsDeficient = true;\r\n\t\t            }\r\n\t            }\r\n\t            else\r\n\t            \tsoilIsDeficient = true;\r\n\r\n\t            // are all the conditions ratifying a fertiliser application?\r\n\t            if (seasonIsOpen && cropIsActive && fertilserApplicatorIsAvailable && soilIsDeficient)\r\n\t            { // lets apply some N then\r\n\t            \tif (SoilTestIsEnabled)\r\n\t            \t{ // amount to lift soil N up to desired level (baseAmount)\r\n\t            \t\tAmountToApply = Math.Max(MinimumAmountToApply, baseAmount - TopsoilMineralN);\r\n\t            \t}\r\n\t            \telse\r\n\t            \t{ // amount defined by fixed schedule\r\n\t            \t\tAmountToApply = baseAmount;\r\n\t            \t}\r\n\r\n\t            \tmyFertiliser.Apply(Amount: AmountToApply, Type: Fertiliser.Types.UreaN);\r\n\t           \t\tlastApplicationDate = Clock.Today;\r\n\t            }\r\n            }\r\n        }\r\n\r\n        public void SetFertiliserManagementParameters(string currentCrop, string sowingDate)\r\n        {\r\n        \t//NOTE: The management rules must be set for each crop separately.\r\n        \t//     For most crops fertiliser applicactions are split in two 'windows': at sowing and top dressing.\r\n        \t//     Top dressing may be further split, especially for crops with a long growing season.\r\n        \t//     The two basic options for managing fertiliser applications are:\r\n        \t//      - schedule applications, where dates are pre-defined (equal to sowingDate, plus start and end of top dressing window)\r\n        \t//        and the user provides the total N to apply, which is split between dates, according to set proportions;\r\n        \t//      - use soil testing, where application time and amounts are calculated based on how much N is in the top soil (only mineral N),\r\n        \t//        the amounts to be applied aim to lift soil N to the amounts correspondent to schedule (i.e. adjusted to existing amount);\r\n\r\n        \tCurrentCrop = currentCrop;\r\n        \tCropSowingDate = sowingDate;\r\n            if(CurrentCrop.ToLower() == \"autumnwheat\")\r\n            {\r\n            \tcropPotentialNUptake = 350.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.2;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 2;\r\n    \t\t\ttopDressingStartDate = \"15-Aug\";\r\n    \t\t\ttopDressingEndDate = \"15-Oct\";\r\n    \t\t}\r\n    \t\telse if(CurrentCrop.ToLower() == \"springwheat\")\r\n            {\r\n            \tcropPotentialNUptake = 250.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.25;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 2;\r\n    \t\t\ttopDressingStartDate = \"15-Oct\";\r\n    \t\t\ttopDressingEndDate = \"15-Nov\";\r\n    \t\t}\r\n    \t\telse if(CurrentCrop.ToLower() == \"autumnbarley\")\r\n            {\r\n            \tcropPotentialNUptake = 250.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.2;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 2;\r\n    \t\t\ttopDressingStartDate = \"15-Aug\";\r\n    \t\t\ttopDressingEndDate = \"30-Sep\";\r\n    \t\t}\r\n    \t\telse if(CurrentCrop.ToLower() == \"springbarley\")\r\n            {\r\n            \tcropPotentialNUptake = 200.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.25;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 2;\r\n    \t\t\ttopDressingStartDate = \"10-Oct\";\r\n    \t\t\ttopDressingEndDate = \"30-Oct\";\r\n    \t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"autumnbarleychop\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 50.0;\r\n    \t\t\tproportionToApplyAtSowing = 1.0;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 0;\r\n    \t\t\ttopDressingStartDate = \"Never\";\r\n    \t\t\ttopDressingEndDate = \"Never\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"summerbarleychop\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 50.0;\r\n    \t\t\tproportionToApplyAtSowing = 1.0;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 0;\r\n    \t\t\ttopDressingStartDate = \"Never\";\r\n    \t\t\ttopDressingEndDate = \"Never\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"autumnoats\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 100.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.5;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 1;\r\n    \t\t\ttopDressingStartDate = \"05-Sep\";\r\n    \t\t\ttopDressingEndDate = \"30-Sep\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"springoats\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 150.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.33;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 2;\r\n    \t\t\ttopDressingStartDate = \"15-Oct\";\r\n    \t\t\ttopDressingEndDate = \"15-Nov\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"autumnoatschop\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 0.0;\r\n    \t\t\tproportionToApplyAtSowing = 1.0;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 0;\r\n    \t\t\ttopDressingStartDate = \"Never\";\r\n    \t\t\ttopDressingEndDate = \"Never\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"springoatschop\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 0.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.0;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 0;\r\n    \t\t\ttopDressingStartDate = \"Never\";\r\n    \t\t\ttopDressingEndDate = \"Never\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"summeroatschop\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 50.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.0;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 1;\r\n    \t\t\ttopDressingStartDate = \"15-Sep\";\r\n    \t\t\ttopDressingEndDate = \"20-Sep\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower().Contains(\"fodderbeet\"))\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 200.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.30;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 2;\r\n    \t\t\ttopDressingStartDate = \"15-Nov\";\r\n    \t\t\ttopDressingEndDate = \"15-Jan\";\r\n\t\t\t}\r\n\t\t\telse if(CurrentCrop.ToLower() == \"fieldpea\")\r\n\t\t\t{\r\n            \tcropPotentialNUptake = 0.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.0;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 0;\r\n    \t\t\ttopDressingStartDate = \"Never\";\r\n    \t\t\ttopDressingEndDate = \"Never\";\r\n\t\t\t}\r\n\t\t\telse if (CurrentCrop.ToLower() == \"pasture\")\r\n\t\t\t{\r\n\t\t\t\t// to be updated by AgResearch\r\n            \tcropPotentialNUptake = 200.0;\r\n    \t\t\tproportionToApplyAtSowing = 0.0;\r\n    \t\t\tnumberOfApplicationsForTopDressing = 5;\r\n    \t\t\ttopDressingStartDate = \"15-Aug\";\r\n    \t\t\ttopDressingEndDate = \"15-Apr\";\r\n    \t\t\tsetUpTopDressingDates(numberOfApplicationsForTopDressing);\r\n\t\t\t}\r\n\t\t\telse\r\n    \t\t{\r\n    \t\t\tCurrentCrop = \"None\";\r\n    \t\t}\r\n\r\n    \t\t// compute proportion to be applied in each top dressing\r\n\t\t\tif(numberOfApplicationsForTopDressing > 0)\r\n\t\t\t\tproportionToApplyEachTopDressing = Math.Max(0.0,(1.0 - proportionToApplyAtSowing)/numberOfApplicationsForTopDressing);\r\n\t\t\telse\r\n\t\t\t\tproportionToApplyEachTopDressing = 0.0;\r\n\r\n    \t\t// check whether dates to apply need to be set\r\n\t\t\tif (!SoilTestIsEnabled && (numberOfApplicationsForTopDressing > 0))\r\n\t\t\t\tsetUpTopDressingDates(numberOfApplicationsForTopDressing);\r\n        }\r\n\r\n        private void setUpTopDressingDates(int numOfApplications)\r\n        {\r\n        \t// Set up array with dates for topdressing (to be used when schedulling applications)\r\n        \t// assumes that applications are split evenly within the window, according to the number of applications\r\n\r\n\t\t\ttopDressingFixedDates = new string[numOfApplications];\r\n\t\t\tint intervalBetweenApplications = Convert.ToInt32((DateUtilities.GetDate(topDressingEndDate,Clock.Today.Year) - DateUtilities.GetDate(topDressingStartDate,Clock.Today.Year)).TotalDays/numOfApplications);\r\n\t\t\tif (intervalBetweenApplications<0)\r\n\t\t\t\tintervalBetweenApplications += 365;\r\n\r\nmySummary.WriteMessage(this,\"  intervalBetweenApplications: \" + intervalBetweenApplications);\r\n\r\n\t\t\tDateTime auxDate = DateUtilities.GetDate(topDressingStartDate,Clock.Today.Year);\r\n\t\t\tauxDate = auxDate.AddDays(intervalBetweenApplications/2.0);\r\n\t\t\ttopDressingFixedDates[0] = auxDate.ToString(\"dd-MMM\");\r\n\t\t\tfor (int i=1; i<numOfApplications; i++)\r\n\t\t\t{\r\n\t\t\t\tauxDate = auxDate.AddDays(intervalBetweenApplications);\r\n\t\t\t\ttopDressingFixedDates[i] = auxDate.ToString(\"dd-MMM\");\r\n\t\t\t}\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "FertiliserManagementIsEnabled",
                      "Value": "True"
                    },
                    {
                      "Key": "CurrentCrop",
                      "Value": "None"
                    },
                    {
                      "Key": "CropSowingDate",
                      "Value": "Never"
                    },
                    {
                      "Key": "SoilTestIsEnabled",
                      "Value": "True"
                    },
                    {
                      "Key": "DepthOfTopsoil",
                      "Value": "600"
                    },
                    {
                      "Key": "CriticalSoilN",
                      "Value": "35"
                    },
                    {
                      "Key": "MinimumAmountToApply",
                      "Value": "20"
                    },
                    {
                      "Key": "ReturnDays",
                      "Value": "1"
                    }
                  ],
                  "Name": "CropsAutomaticFertiliser",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "using System;\r\nusing Models.Core;\r\nusing Models.PMF;\r\nusing APSIM.Shared.Utilities;\r\nnamespace Models\r\n{\r\n    [Serializable]\r\n    public class Script : Model\r\n    {\r\n        //Links to other Apsim modules\r\n        [Link] Clock Clock;\r\n        [Link] Fertiliser myFertiliser;\r\n        [Link] private AgPasture.Sward Pasture;\r\n        \r\n        //User inputs from properties tab\r\n        [Separator(\"Generic management for applying N fertiliser in crops on one or more dates in every year\")]\r\n        [Description(\"Allow this manager to control fertiliser applications? \")]\r\n        public bool FertiliserManagementIsEnabled { get; set; }\r\n        [Description(\"Restrict fertiliser applications to pasture? \")]\r\n        public bool FertiliserManagementIsRestricted { get; set; }\r\n        [Description(\"Dates to apply fertiliser (dd-mmm, separated by comma): \")] \r\n        public string[] FertiliserDates { get; set; } \r\n        [Description(\"Amount(s) of fertiliser to be applied (kgN/ha)\")]\r\n        public double[] FertNAmount { get; set; }\r\n        [Description(\"Type of fertiliser to apply? \")]\r\n        public Fertiliser.Types FertType { get; set; }\r\n\r\n        //Internal variables\r\n        private int applicationCounter;\r\n        private bool allowFertiliserApplications;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \tapplicationCounter = 0;\r\n        \tallowFertiliserApplications = false;\r\n        \tif (FertiliserManagementIsEnabled)\r\n        \t{\r\n\t        \tif (FertNAmount.Length > 1)\r\n    \t    \t{\r\n        \t\t\tif (FertNAmount.Length < FertiliserDates.Length)\r\n        \t\t\t{\r\n        \t\t\t\tthrow new Exception(\"Fertiliser amounts must be either one value or equal to the number of dates given.\");\r\n        \t\t\t}\r\n        \t\t}\r\n        \t}\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n        \tif (FertiliserManagementIsEnabled)\r\n        \t{\r\n        \t\tif (FertiliserManagementIsRestricted)\r\n        \t\t{ // only fertiliser if pasture is alive\r\n        \t\t\tif (Pasture.IsAlive)\r\n\t\t        \t\tallowFertiliserApplications = true;\r\n\t\t        \telse\r\n\t\t        \t\tallowFertiliserApplications = false;\r\n\t\t        }\r\n\t\t        else\r\n\t\t        {\r\n        \t\t\tallowFertiliserApplications = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (allowFertiliserApplications)\r\n\t\t\t\t{\r\n\t\t        \tforeach (string givenDate in FertiliserDates)\r\n\t\t        \t{\r\n\t\t    \t\t\tif (DateUtilities.DatesEqual(givenDate, Clock.Today))\r\n\t\t        \t\t{\r\n\t\t        \t\t\tif (FertNAmount.Length > 1)\r\n\t\t        \t\t\t{\r\n\t\t\t        \t\t\tapplicationCounter = Array.IndexOf(FertiliserDates, givenDate);\r\n\t\t        \t\t\t}\r\n\r\n\t\t        \t\t\tmyFertiliser.Apply(Amount: FertNAmount[applicationCounter], Type: FertType);\r\n\t\t        \t\t}\r\n\t\t        \t}\r\n\t        \t}\r\n        \t}\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "FertiliserManagementIsEnabled",
                      "Value": "True"
                    },
                    {
                      "Key": "FertiliserManagementIsRestricted",
                      "Value": "True"
                    },
                    {
                      "Key": "FertiliserDates",
                      "Value": "15-Sep,30-Nov,15-Apr"
                    },
                    {
                      "Key": "FertNAmount",
                      "Value": "33.33"
                    },
                    {
                      "Key": "FertType",
                      "Value": "UreaN"
                    }
                  ],
                  "Name": "FertiliseOnFixedDates",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Manager, Models",
                  "Code": "\r\nusing Models.Interfaces;\r\nusing System.Xml.Serialization;\r\nusing APSIM.Shared.Utilities;\r\nusing Models.PMF;\r\nusing Models.Core;\r\nusing System;\r\nusing Models.Soils;\r\nusing Models.Interfaces;\r\n        \r\nnamespace Models\r\n{\r\n    [Serializable] \r\n    [System.Xml.Serialization.XmlInclude(typeof(Model))]\r\n    public class Script : Model\r\n    {\r\n        [Link] private Zone zone;\r\n        [Link] private Clock Clock;\r\n        [Link] private Weather Weather;\r\n        [Link] private Fertiliser Fert;\r\n        [Link] private Irrigation Irrig;\r\n        [Link] private ISummary summary;\r\n        private int reportingLayer;\r\n        [ScopedLinkByName]\r\n        private ISolute NO3;\r\n        [ScopedLinkByName]\r\n        private ISolute NH4;\r\n        [ScopedLinkByName]\r\n        private ISolute Urea;\r\n        [ScopedLinkByName]\r\n        private SoilNitrogen SoilNitrogen;\r\n        [Link] Soils.Soil Soil;\r\n        [Link] Models.Surface.SurfaceOrganicMatter SurfOM;\r\n        [Link] Soils.SoilWater SoilWater = null;\r\n\r\n        [Separator(\"Auxiliary manager to compute summaries and other bits and pieces\")]\r\n        [Description(\" Date to reset cumulative values (dd-mmm): \")]\r\n        public string resetDate { get; set; }\r\n        [Description(\" A general purpose output tag: \")]\r\n        public string TagOutput { get; set; }\r\n\r\n        [XmlIgnore] public double AccumRainfall { get; set; }\r\n        [XmlIgnore] public double AccumIrrigation { get; set; }\r\n        [XmlIgnore] public double AccumDrainage { get; set; }\r\n        [XmlIgnore] public double AccumSurfOMMineralisation { get; set; }\r\n        [XmlIgnore] public double AccumFert { get; set; }\r\n        [XmlIgnore] public double AccumExcreta { get; set; }\r\n        [XmlIgnore] public double AccumTotalSoilOMMineralised { get; set; }\r\n        [XmlIgnore] public double AccumTotalDenitrifiedN { get; set; }\r\n        [XmlIgnore] public double AccumTotalLeachedN { get; set; }\r\n        [XmlIgnore] public double AccumUptakeN { get; set; }\r\n\r\n        private double cumRain;\r\n        private double cumIrrig;\r\n        private double cumDrain;\r\n        private double cumSurfOMMiner;\r\n        private double cumSOMMiner;\r\n        private double cumFert;\r\n        private double cumExcreta;\r\n        private double cumLeach;\r\n        private double cumDenit;\r\n        private double cumNup;\r\n       \r\n        private DateTime dateToReset;\r\n        private bool hasReset;\r\n\r\n        [EventSubscribe(\"Commencing\")]\r\n        private void OnSimulationCommencing(object sender, EventArgs e)\r\n        {\r\n        \tdateToReset = DateTime.Parse(resetDate);\r\n        \thasReset = false;\r\n        }\r\n        \r\n        [EventSubscribe(\"DoManagement\")]\r\n        private void OnDoManagement(object sender, EventArgs e)\r\n        {\r\n        \t// reset outputs\r\n        \tif (hasReset)\r\n        \t{\r\n        \t\tZeroOutputs();\r\n        \t\thasReset = false;\r\n        \t}\r\n\r\n            // reset variables when reset date is reached\r\n            if ((Clock.Today.Month == dateToReset.Month) && (Clock.Today.Day == dateToReset.Day))\r\n            {\r\n                ZeroVars();\r\n                hasReset = true;\r\n            }\r\n        }\r\n\r\n        [EventSubscribe(\"DoManagementCalculations\")]\r\n        private void OnDoManagementCalculations(object sender, EventArgs e)\r\n        {\r\n            // summarise a series of variables\r\n            SummariseVars();\r\n        }\r\n\r\n        private void ZeroVars()\r\n        {\r\n            // zero accumulating variables\r\n            AccumRainfall = cumRain;\r\n            AccumIrrigation = cumIrrig;\r\n            AccumDrainage = cumDrain;\r\n            AccumSurfOMMineralisation = cumSurfOMMiner;\r\n            AccumTotalSoilOMMineralised = cumSOMMiner;\r\n            AccumFert = cumFert;\r\n            AccumExcreta = cumExcreta;\r\n            AccumTotalDenitrifiedN = cumDenit;\r\n            AccumTotalLeachedN = cumLeach;\r\n            AccumUptakeN = cumNup;\r\n\r\n            // get initial values\r\n        \tcumRain = 0.0;\r\n        \tcumIrrig = 0.0;\r\n        \tcumDrain = 0.0;\r\n        \tcumSurfOMMiner = 0.0;\r\n        \tcumSOMMiner = 0.0;\r\n        \tcumFert = 0.0;\r\n        \tcumExcreta = 0.0;\r\n        \tcumDenit = 0.0;\r\n        \tcumLeach = 0.0;\r\n        \tcumNup = 0.0;\r\n        }\r\n\r\n        private void ZeroOutputs()\r\n        {\r\n            // zero accumulating variables\r\n            AccumRainfall = 0.0;\r\n            AccumIrrigation = 0.0;\r\n            AccumDrainage = 0.0;\r\n            AccumSurfOMMineralisation = 0.0;\r\n            AccumTotalSoilOMMineralised = 0.0;\r\n            AccumFert = 0.0;\r\n            AccumExcreta = 0.0;\r\n            AccumTotalDenitrifiedN = 0.0;\r\n            AccumTotalLeachedN = 0.0;\r\n            AccumUptakeN = 0.0;\r\n        }\r\n\r\n        private void SummariseVars()\r\n        {\r\n            // get the water balance components\r\n            cumRain += Weather.Rain;\r\n            cumIrrig += Irrig.IrrigationApplied;\r\n            cumDrain += Soil.SoilWater.Drainage;\r\n\r\n            // get the nitrogen balance components\r\n            cumSurfOMMiner += MathUtilities.Sum(SoilNitrogen.dlt_n_min_res);\r\n            cumSOMMiner += MathUtilities.Sum(SoilNitrogen.MineralisedN);\r\n            cumFert += Fert.NitrogenApplied; \r\n            cumExcreta += (double)zone.Get(\"[PastureHarvestManager].Script.ReturnedN\");\r\n            cumDenit += MathUtilities.Sum(SoilNitrogen.Denitrification);\r\n            cumLeach += Soil.SoilWater.LeachNH4 + Soil.SoilWater.LeachNO3;\r\n            cumNup += ((double)zone.Get(\"[Sward].Ryegrass.SoilUptakeN\") + (double)zone.Get(\"[Sward].WhiteClover.SoilUptakeN\"))\r\n            -((double)zone.Get(\"[Wheat].Root.NUptake\") + (double)zone.Get(\"[Barley].Root.NUptake\") + (double)zone.Get(\"[Oats].Root.NUptake\")\r\n            + (double)zone.Get(\"[FodderBeet].Root.NUptake\") + (double)zone.Get(\"[FieldPea].Root.NUptake\"));\r\n        }\r\n    }\r\n}\r\n",
                  "Parameters": [
                    {
                      "Key": "resetDate",
                      "Value": "15-Mar"
                    },
                    {
                      "Key": "TagOutput",
                      "Value": "none"
                    }
                  ],
                  "Name": "AuxSummary",
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Memo, Models",
                  "Text": " \r\n# Description of manager scripts and the logic behind\n\nManagement of crop (and pasture) rotation is primarily done by the *RotationManager* script; this manager control the length and order of crops in the rotation.  The actual operations on the crop and pasture are done by additional scripts, *CropSowingManager* and *CropHarvestManager*.  These scripts can be used on their own, but the idea here is that their parameters are set up by the *RotationManager*.  Irrigation and fertiliser applications are also controlled by specific scripts, responding to the type of rotation or species in the ground, but also having their own parameters.  Basic details and assumption used for each scrript are given below.  \n\n## RotationManager  \nThis manager has two primary settings, the first defining whether pasture is part of the rotation or not (if yes, pasture is assumed to be in the field at the start of the simulation); the second setting contains the list of crops that make up the rotation.  These are in fact the combination of crop type and general management (e.g. autumn or spring sowing - refer to the file 'Aparima rotations.xlsx').  Four more parameters can be set and will be used in case pasture is part of the rotation: the number of years for the rotation cycle; the year within the rotation in which the pasture is terminated; the period for killing off the pasture; and the period for re-sowing new pasture after cropping.  \n - If pasture is not part of the rotation, it will be killed off at initialisation (this is needed as AgPasture is by default alive at the start of Apsim simulations). In this case, the rotation length is defined by the number of crops listed, their respective duration, and any fallow period between crops;  \n - If pasture is part of the rotation, the simulation starts with it already established.  The pasture will be killed off after the number of years from the start of the simulation defined in the UI and at the period given (spring or summer).  The user is expected to check that the year and period to kill off pasture are in conformity with the simulation start date (e.g. if wanting to kill off pasture in the first year, but starting the simulation after the date the termination was meant to happen, will result in an extra year of pasture at the beginning of the simulation.  This is also the case for the choice of killing off period and first crop (e.g. kill the pasture in spring and sowing a crop earlier in spring might mean one year of fallow!).  After all the crops given in the list are simulated, pasture is re-sown in the field, the period for this action can be also defined in the UI (spring or autumn).  The resowing of pasture completes the rotation cycle, which will run to match the number of years given in the rotation length, when the cycle will be re-start.  Note that if the number of crops given and their duration would require a greater time to run them than the rotation length, the rotation length will be automatically increased;  \n - Sowing and harvests dates, as well as sowing parameters (e.g. cultivar), are pre-defined for each crop.  Variations are given to cover different sowing times and harvest managements;  \n - The years within a rotation are defined as a calender year, thus the first year of simulation will end in 31-Dec regardless of when the simulation started (so it may take only one day to count as the first year, the user must be aware of that when setting up the rotation;\r\n\n## CropSowingManager  \nThis manager controls the sowing of crops, and re-sown of pasture.  It takes two parameters (species and date), which are meant to be set by the *RotationManager*.\n\n## CropHarvestManager  \nThis manager takes two parameters, species and date, to harvest a crop (and terminate it), or kill of pasture.  The parameters are also set up by the *RotationManager*.\n\n\n\n## AutomaticFertiliser\nThis is a generic manager that adds fertiliser based on the amount of N in the soil.  A window for applications can be defined (e.g. to avoid winter applications), but no test for the presence of plants is made.  Besides the window of application two parameters define when fertiliser is applied, the minimum amount of N in the soil and the depth to which this amount is considered.  Fertiliser will be applied whenever the N amount at the given layer falls below the minimum threshold, provided that the date is within the application window.  This may be further restricted by the minimum number of days between applications.  The amount and type of fertiliser to be applied are also defined in the UI.  \n\n## CropsAutomaticFertiliser\nThis manager attempts to mimic more realistic fertiliser management for cropping systems.  Applications are split into small windows, 'at sowing' and one or more 'top dressings'.  These are thus linked to the crop type being simulated and their expected N off take (which are hard-coded).  The amount of N to apply can be set to a schedulled amount or can be adjusted based on soil testing.  If SoilTest is not enabled, the schedulled amount (a fraction of expecited crop uptake) will be applied at the start day of the each window.  If SoilTest is enabled the manager will test the soil to the depth given and only apply fertiliser if the N amount is below the given threshold, and will apply only the difference between existing N and the amount aimed for.  Depending on the parameters given to define the window and N thresholds, more than one fertiliser application may take place in a given window.  Note that becuase these application are linked to crop type, applications will not happen if there is no crop.  Pasture is not yet included as a valid crop.  \n\n\n## AutomaticIrrigation\nThis is a generic manager that applies irrigation based on soil moisture status.  The irrigation season is defined by a start and end dates, and withing this window irrigation will be apllied whennever the soil moisture falls below a given threshold, which is the soil water deficit (sw-dul) at a given depth.  Applications can be further delayed by the minimum interval between irrigations and stopped altogether if the allocation for the season is exceeded.  A given irrigation stops when the deficit is smaller than a given threshold, depending on the parameters used this may take more than one day.  The amount applied is defined by the difference between the current deficit and a maximum application rate.  \n\n\n## PastureHarvestManager\nThis generic manager attempts to defoliate pasture (AgPasture sward) continuously between two given dates (absolute, not window within a year).   Defoliation are triggered either a given intervals or when the standing biomass aboveground reaches a given threshold.  At each event the amount defoliated is defined by either a set amount to remove or the residual biomass, the defoliation can span from one to several days.  The biomass amount defoliated can be fully removed from the field or a fraction of it can be returned.  The amount returned can be defined as residue (grass added to the surface OM) or dung+urine (dung added to surface OM and urea added to the soil).  There are paramters to define the partitioning between dung and urine, and the depth down to which urine is applied.  \n// Defoliates AgPasture on a regular rotation or one-off via a schedule\n// currenty defoliates the amount specified by spreading evenly over the specified period\n\n\n\n\n= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =\n\n# Notes and reminders\n\n\n - Sowing, harvests, and pasture kills, could/should be defined by time windows (each with a start and end date).  In these the action would happen as soon as some criteria are matched (for instance: soil moisture and/or temperature for sowing, crop ripeness and rain for harvest, rain for pasture kill).  And how about level of residues, if there is too much it may not be possible to sow...\n - Fertiliser applications could incorporate factors such as soil moisture too.\n - Tillage, or at least the removal of residues post-harvest may need to be considered.\n",
                  "Name": "Description",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.MicroClimate, Models",
              "a_interception": 0.0,
              "b_interception": 1.0,
              "c_interception": 0.0,
              "d_interception": 0.0,
              "soil_albedo": 0.3,
              "SoilHeatFluxFraction": 0.4,
              "NightInterceptionFraction": 0.5,
              "ReferenceHeight": 2.0,
              "Name": "MicroClimate",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Irrigation, Models",
              "Name": "Irrigation",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Fertiliser, Models",
              "Name": "Fertiliser",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Surface.SurfaceOrganicMatter, Models",
              "InitialResidueName": "oat_stubble",
              "InitialResidueType": "oats",
              "InitialResidueMass": 1500.0,
              "InitialStandingFraction": 0.5,
              "InitialCPR": 0.0,
              "InitialCNR": 20.0,
              "FractionFaecesAdded": 0.5,
              "ResourceName": "SurfaceOrganicMatter",
              "Name": "SurfaceOrganicMatter",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Soils.Soil, Models",
              "RecordNumber": 0,
              "ASCOrder": null,
              "ASCSubOrder": null,
              "SoilType": "Deep Silt Loam - Typic Firm Brown Soil",
              "LocalName": "Waikiwi",
              "Site": "Woodlands",
              "NearestTown": "Invercargill",
              "Region": "Southland",
              "State": "South Island",
              "Country": "New Zealand",
              "NaturalVegetation": null,
              "ApsoilNumber": null,
              "Latitude": -48.48,
              "Longitude": 0.0,
              "LocationAccuracy": null,
              "DataSource": "NZ National soils database and S-Map",
              "Comments": "Complemented with PTFs (Cichota et al)",
              "AirDry": [
                0.1,
                0.23,
                0.229,
                0.244,
                0.271
              ],
              "Name": "Soil",
              "Children": [
                {
                  "$type": "Models.Soils.Analysis, Models",
                  "Thickness": [
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    500.0
                  ],
                  "Rocks": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "RocksMetadata": null,
                  "Texture": [],
                  "TextureMetadata": null,
                  "MunsellColour": [],
                  "MunsellMetadata": null,
                  "EC": null,
                  "ECMetadata": null,
                  "PH": [
                    6.0,
                    6.0,
                    6.0,
                    6.0,
                    6.0
                  ],
                  "PHMetadata": null,
                  "CL": null,
                  "CLMetadata": null,
                  "Boron": null,
                  "BoronMetadata": null,
                  "CEC": [
                    15.4,
                    9.1,
                    7.1,
                    7.5,
                    8.8
                  ],
                  "CECMetadata": null,
                  "Ca": null,
                  "CaMetadata": null,
                  "Mg": null,
                  "MgMetadata": null,
                  "Na": null,
                  "NaMetadata": null,
                  "K": null,
                  "KMetadata": null,
                  "ESP": null,
                  "ESPMetadata": null,
                  "Mn": null,
                  "MnMetadata": null,
                  "Al": null,
                  "AlMetadata": null,
                  "ParticleSizeSand": [
                    7.2,
                    6.1,
                    8.3,
                    4.1,
                    4.2
                  ],
                  "ParticleSizeSandMetadata": null,
                  "ParticleSizeSilt": [
                    68.8,
                    81.9,
                    73.7,
                    74.9,
                    67.8
                  ],
                  "ParticleSizeSiltMetadata": null,
                  "ParticleSizeClay": [
                    24.0,
                    12.0,
                    18.0,
                    21.0,
                    28.0
                  ],
                  "ParticleSizeClayMetadata": null,
                  "PHUnits": 0,
                  "BoronUnits": 0,
                  "Name": "Analysis",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Water, Models",
                  "Thickness": [
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    500.0
                  ],
                  "BD": [
                    1.129,
                    1.289,
                    1.462,
                    1.418,
                    1.336
                  ],
                  "AirDry": [
                    0.1,
                    0.23,
                    0.229,
                    0.244,
                    0.271
                  ],
                  "LL15": [
                    0.215,
                    0.236,
                    0.229,
                    0.244,
                    0.271
                  ],
                  "DUL": [
                    0.497,
                    0.437,
                    0.411,
                    0.426,
                    0.465
                  ],
                  "SAT": [
                    0.514,
                    0.483,
                    0.43,
                    0.442,
                    0.473
                  ],
                  "KS": [
                    603.4,
                    426.1,
                    64.9,
                    43.4,
                    14.4
                  ],
                  "BDMetadata": null,
                  "AirDryMetadata": null,
                  "LL15Metadata": null,
                  "DULMetadata": null,
                  "SATMetadata": null,
                  "KSMetadata": null,
                  "Name": "Water",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "WheatSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "BarleySoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "OatsSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "FodderBeetSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "FieldPeaSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "RyegrassSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "WhiteCloverSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilCrop, Models",
                      "LL": [
                        0.215,
                        0.236,
                        0.229,
                        0.244,
                        0.271
                      ],
                      "KL": [
                        0.1,
                        0.1,
                        0.08,
                        0.04,
                        0.01
                      ],
                      "XF": [
                        1.0,
                        1.0,
                        1.0,
                        1.0,
                        1.0
                      ],
                      "LLMetadata": null,
                      "KLMetadata": null,
                      "XFMetadata": null,
                      "Name": "ScrumSoil",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilWater, Models",
                  "SummerDate": "1-Nov",
                  "SummerU": 5.0,
                  "SummerCona": 3.0,
                  "WinterDate": "1-apr",
                  "WinterU": 2.0,
                  "WinterCona": 1.0,
                  "DiffusConst": 88.0,
                  "DiffusSlope": 35.0,
                  "Salb": 0.13,
                  "CN2Bare": 73.0,
                  "CNRed": 20.0,
                  "CNCov": 0.8,
                  "slope": 0.0,
                  "discharge_width": 0.0,
                  "catchment_area": 0.0,
                  "max_pond": 0.0,
                  "Thickness": [
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    500.0
                  ],
                  "SWCON": [
                    0.65,
                    0.57,
                    0.6,
                    0.49,
                    0.47
                  ],
                  "KLAT": [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0
                  ],
                  "ResidueInterception": 0.0,
                  "Name": "SoilWater",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilNitrogen, Models",
                  "fom_types": [
                    "default",
                    "manure",
                    "mucuna",
                    "lablab",
                    "shemp",
                    "stable"
                  ],
                  "fract_carb": [
                    0.2,
                    0.3,
                    0.54,
                    0.57,
                    0.45,
                    0.0
                  ],
                  "fract_cell": [
                    0.7,
                    0.3,
                    0.37,
                    0.37,
                    0.47,
                    0.1
                  ],
                  "fract_lign": [
                    0.1,
                    0.4,
                    0.09,
                    0.06,
                    0.08,
                    0.9
                  ],
                  "Name": "SoilNitrogen",
                  "Children": [
                    {
                      "$type": "Models.Soils.SoilNitrogenNO3, Models",
                      "Name": "NO3",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenNH4, Models",
                      "Name": "NH4",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenUrea, Models",
                      "Name": "Urea",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenPlantAvailableNO3, Models",
                      "Name": "PlantAvailableNO3",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.Soils.SoilNitrogenPlantAvailableNH4, Models",
                      "Name": "PlantAvailableNH4",
                      "Children": [],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.SoilOrganicMatter, Models",
                  "RootCN": 40.0,
                  "EnrACoeff": 7.4,
                  "EnrBCoeff": 0.2,
                  "Thickness": [
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    500.0
                  ],
                  "Depth": [
                    "0-20",
                    "20-40",
                    "40-60",
                    "60-100",
                    "100-150"
                  ],
                  "OC": [
                    4.1,
                    1.6,
                    0.8,
                    0.4,
                    0.3
                  ],
                  "OCMetadata": null,
                  "SoilCN": [
                    12.5,
                    12.5,
                    12.5,
                    12.5,
                    12.5
                  ],
                  "FBiom": [
                    0.075,
                    0.014,
                    0.008,
                    0.008,
                    0.008
                  ],
                  "FInert": [
                    0.585,
                    0.766,
                    0.91,
                    0.956,
                    0.991
                  ],
                  "RootWt": [
                    138.29801237052573,
                    92.7039300188482,
                    62.141302637919004,
                    27.921887143190929,
                    10.271888238689158
                  ],
                  "OCUnits": 0,
                  "Name": "SoilOrganicMatter",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.InitialWater, Models",
                  "PercentMethod": 1,
                  "FractionFull": 0.95,
                  "DepthWetSoil": "NaN",
                  "RelativeTo": null,
                  "Name": "Initial water",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.Sample, Models",
                  "Thickness": [
                    200.0,
                    200.0,
                    200.0,
                    400.0,
                    500.0
                  ],
                  "NO3": [
                    11.29,
                    6.445,
                    2.924,
                    4.254,
                    3.34
                  ],
                  "NH4": [
                    0.2258,
                    0.2578,
                    0.2924,
                    0.5672,
                    0.668
                  ],
                  "SW": null,
                  "OC": null,
                  "EC": null,
                  "CL": null,
                  "ESP": null,
                  "PH": null,
                  "NO3Units": 1,
                  "NH4Units": 1,
                  "SWUnits": 0,
                  "OCUnits": 0,
                  "PHUnits": 0,
                  "Name": "Initial nitrogen",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Soils.CERESSoilTemperature, Models",
                  "Name": "CERESSoilTemperature",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.AgPasture.Sward, Models",
              "ControlledBySward": 0,
              "WaterUptakeSource": "soilarbitrator",
              "NUptakeSource": "soilarbitrator",
              "Name": "Sward",
              "Children": [
                {
                  "$type": "Models.AgPasture.PastureSpecies, Models",
                  "MaximumNUptake": 10.0,
                  "Albedo": 0.26,
                  "Gsmax": 0.011,
                  "R50": 200.0,
                  "SpeciesFamily": 0,
                  "PhotosyntheticPathway": 0,
                  "InitialShootDM": 1500.0,
                  "InitialRootDM": 450.0,
                  "InitialRootDepth": 750.0,
                  "ReferencePhotosyntheticRate": 1.0,
                  "LightExtinctionCoefficient": 0.5,
                  "GrowthTminimum": 1.0,
                  "GrowthToptimum": 20.0,
                  "GrowthTEffectExponent": 1.7,
                  "UseHeatStressFactor": 0,
                  "HeatOnsetTemperature": 28.0,
                  "HeatFullTemperature": 35.0,
                  "HeatRecoverySumDD": 30.0,
                  "HeatRecoveryTReference": 25.0,
                  "UseColdStressFactor": 0,
                  "ColdOnsetTemperature": 1.0,
                  "ColdFullTemperature": -5.0,
                  "ColdRecoverySumDD": 25.0,
                  "ColdRecoveryTReference": 0.0,
                  "MaintenanceRespirationCoefficient": 0.03,
                  "GrowthRespirationCoefficient": 0.25,
                  "RespirationTReference": 20.0,
                  "RespirationExponent": 1.5,
                  "NThresholdsForLeaves": [
                    0.04,
                    0.012,
                    0.05
                  ],
                  "NThresholdsForStems": [
                    0.02,
                    0.006,
                    0.025
                  ],
                  "NThresholdsForStolons": [
                    0.0,
                    0.0,
                    0.0
                  ],
                  "NThresholdsForRoots": [
                    0.02,
                    0.006,
                    0.025
                  ],
                  "DegreesDayForGermination": 125.0,
                  "TargetShootRootRatio": 4.0,
                  "MaxRootAllocation": 0.25,
                  "ShootRootGlfFactor": 0.5,
                  "UseReproSeasonFactor": 0,
                  "ReproSeasonReferenceLatitude": 41.0,
                  "ReproSeasonTimingCoeff": 0.14,
                  "ReproSeasonMaxAllocationIncrease": 0.5,
                  "ReproSeasonAllocationCoeff": 0.1,
                  "FractionLeafMaximum": 0.7,
                  "FractionLeafMinimum": 0.7,
                  "FractionLeafDMThreshold": 500.0,
                  "FractionLeafDMFactor": 2000.0,
                  "FractionLeafExponent": 3.0,
                  "FractionToStolon": 0.0,
                  "SpecificLeafArea": 25.0,
                  "SpecificRootLength": 100.0,
                  "StolonEffectOnLAI": 0.0,
                  "ShootMaxEffectOnLAI": 1000.0,
                  "MaxStemEffectOnLAI": 1.0,
                  "LiveLeavesPerTiller": 3.0,
                  "TissueTurnoverRateShoot": 0.05,
                  "TissueTurnoverRateRoot": 0.02,
                  "DetachmentRateShoot": 0.08,
                  "TurnoverTemperatureMin": 2.0,
                  "TurnoverTemperatureRef": 20.0,
                  "TurnoverTemperatureExponent": 1.0,
                  "TurnoverDroughtEffectMax": 1.0,
                  "TurnoverDroughtThreshold": 0.5,
                  "TurnoverDefoliationCoefficient": 0.5,
                  "TurnoverDefoliationRootEffect": 0.1,
                  "FractionNLuxuryRemobilisable": [
                    0.1,
                    0.1,
                    0.1
                  ],
                  "MinimumNFixation": 0.0,
                  "MaximumNFixation": 0.0,
                  "SoilSaturationEffectMax": 0.1,
                  "MinimumWaterFreePorosity": -1.0,
                  "SoilSaturationRecoveryFactor": 0.25,
                  "NDillutionCoefficient": 0.25,
                  "GlfGeneric": 1.0,
                  "GlfSoilFertility": 1.0,
                  "PlantHeightMinimum": 25.0,
                  "PlantHeightMaximum": 600.0,
                  "PlantHeightMassForMax": 10000.0,
                  "PlantHeightExponent": 2.8,
                  "RootDepthMinimum": 50.0,
                  "RootDepthMaximum": 750.0,
                  "RootElongationRate": 25.0,
                  "RootDistributionDepthParam": 90.0,
                  "RootDistributionExponent": 3.2,
                  "DigestibilitiesCellWall": [
                    0.6,
                    0.6,
                    0.6,
                    0.2
                  ],
                  "MinimumGreenWt": 100.0,
                  "FractionStolonStanding": 0.0,
                  "PreferenceForGreenOverDead": 1.0,
                  "PreferenceForLeafOverStems": 1.0,
                  "WaterAvailableMethod": 0,
                  "NitrogenAvailableMethod": 0,
                  "Name": "Ryegrass",
                  "Children": [
                    {
                      "$type": "Models.AgPasture.PastureAboveGroundOrgan, Models",
                      "Name": "Leaves",
                      "Children": [
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort1",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort2",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort3",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "Dead",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.AgPasture.PastureAboveGroundOrgan, Models",
                      "Name": "Stems",
                      "Children": [
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort1",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort2",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort3",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "Dead",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.AgPasture.PastureAboveGroundOrgan, Models",
                      "Name": "Stolons",
                      "Children": [
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort1",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort2",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort3",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "Dead",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.AgPasture.PastureSpecies, Models",
                  "MaximumNUptake": 10.0,
                  "Albedo": 0.26,
                  "Gsmax": 0.011,
                  "R50": 200.0,
                  "SpeciesFamily": 1,
                  "PhotosyntheticPathway": 0,
                  "InitialShootDM": 500.0,
                  "InitialRootDM": 150.0,
                  "InitialRootDepth": 350.0,
                  "ReferencePhotosyntheticRate": 1.0,
                  "LightExtinctionCoefficient": 0.8,
                  "GrowthTminimum": 2.0,
                  "GrowthToptimum": 22.0,
                  "GrowthTEffectExponent": 1.7,
                  "UseHeatStressFactor": 0,
                  "HeatOnsetTemperature": 30.0,
                  "HeatFullTemperature": 36.0,
                  "HeatRecoverySumDD": 20.0,
                  "HeatRecoveryTReference": 25.0,
                  "UseColdStressFactor": 0,
                  "ColdOnsetTemperature": 2.0,
                  "ColdFullTemperature": -5.0,
                  "ColdRecoverySumDD": 30.0,
                  "ColdRecoveryTReference": 0.0,
                  "MaintenanceRespirationCoefficient": 0.04,
                  "GrowthRespirationCoefficient": 0.25,
                  "RespirationTReference": 20.0,
                  "RespirationExponent": 1.5,
                  "NThresholdsForLeaves": [
                    0.045,
                    0.02,
                    0.055
                  ],
                  "NThresholdsForStems": [
                    0.0225,
                    0.01,
                    0.0275
                  ],
                  "NThresholdsForStolons": [
                    0.0225,
                    0.01,
                    0.0275
                  ],
                  "NThresholdsForRoots": [
                    0.0225,
                    0.01,
                    0.0275
                  ],
                  "DegreesDayForGermination": 125.0,
                  "TargetShootRootRatio": 4.0,
                  "MaxRootAllocation": 0.25,
                  "ShootRootGlfFactor": 0.5,
                  "UseReproSeasonFactor": 0,
                  "ReproSeasonReferenceLatitude": 41.0,
                  "ReproSeasonTimingCoeff": 0.14,
                  "ReproSeasonMaxAllocationIncrease": 0.5,
                  "ReproSeasonAllocationCoeff": 0.1,
                  "FractionLeafMaximum": 0.56,
                  "FractionLeafMinimum": 0.28,
                  "FractionLeafDMThreshold": 500.0,
                  "FractionLeafDMFactor": 2000.0,
                  "FractionLeafExponent": 3.0,
                  "FractionToStolon": 0.2,
                  "SpecificLeafArea": 30.0,
                  "SpecificRootLength": 45.0,
                  "StolonEffectOnLAI": 0.3,
                  "ShootMaxEffectOnLAI": 500.0,
                  "MaxStemEffectOnLAI": 0.5,
                  "LiveLeavesPerTiller": 3.0,
                  "TissueTurnoverRateShoot": 0.05,
                  "TissueTurnoverRateRoot": 0.02,
                  "DetachmentRateShoot": 0.11,
                  "TurnoverTemperatureMin": 2.0,
                  "TurnoverTemperatureRef": 20.0,
                  "TurnoverTemperatureExponent": 1.0,
                  "TurnoverDroughtEffectMax": 1.0,
                  "TurnoverDroughtThreshold": 0.5,
                  "TurnoverDefoliationCoefficient": 0.5,
                  "TurnoverDefoliationRootEffect": 0.1,
                  "FractionNLuxuryRemobilisable": [
                    0.1,
                    0.1,
                    0.1
                  ],
                  "MinimumNFixation": 0.2,
                  "MaximumNFixation": 0.6,
                  "SoilSaturationEffectMax": 0.1,
                  "MinimumWaterFreePorosity": -1.0,
                  "SoilSaturationRecoveryFactor": 0.25,
                  "NDillutionCoefficient": 1.0,
                  "GlfGeneric": 1.0,
                  "GlfSoilFertility": 1.0,
                  "PlantHeightMinimum": 25.0,
                  "PlantHeightMaximum": 350.0,
                  "PlantHeightMassForMax": 7500.0,
                  "PlantHeightExponent": 2.5,
                  "RootDepthMinimum": 30.0,
                  "RootDepthMaximum": 350.0,
                  "RootElongationRate": 25.0,
                  "RootDistributionDepthParam": 70.0,
                  "RootDistributionExponent": 2.5,
                  "DigestibilitiesCellWall": [
                    0.6,
                    0.6,
                    0.6,
                    0.2
                  ],
                  "MinimumGreenWt": 50.0,
                  "FractionStolonStanding": 0.0,
                  "PreferenceForGreenOverDead": 1.0,
                  "PreferenceForLeafOverStems": 1.0,
                  "WaterAvailableMethod": 0,
                  "NitrogenAvailableMethod": 0,
                  "Name": "WhiteClover",
                  "Children": [
                    {
                      "$type": "Models.AgPasture.PastureAboveGroundOrgan, Models",
                      "Name": "Leaves",
                      "Children": [
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort1",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort2",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort3",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "Dead",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.AgPasture.PastureAboveGroundOrgan, Models",
                      "Name": "Stems",
                      "Children": [
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort1",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort2",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort3",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "Dead",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    },
                    {
                      "$type": "Models.AgPasture.PastureAboveGroundOrgan, Models",
                      "Name": "Stolons",
                      "Children": [
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort1",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort2",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "LeafCohort3",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        },
                        {
                          "$type": "Models.AgPasture.GenericTissue, Models",
                          "Name": "Dead",
                          "Children": [],
                          "IncludeInDocumentation": true,
                          "Enabled": true,
                          "ReadOnly": false
                        }
                      ],
                      "IncludeInDocumentation": true,
                      "Enabled": true,
                      "ReadOnly": false
                    }
                  ],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Wheat",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Wheat",
              "Name": "Wheat",
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Barley",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Barley",
              "Name": "Barley",
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "Wheat",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "Oats",
              "Name": "Oats",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "FodderBeet",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "FodderBeet",
              "Name": "FodderBeet",
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.PMF.Plant, Models",
              "CropType": "FieldPea",
              "IsEnding": false,
              "DaysAfterEnding": 0,
              "ResourceName": "FieldPea",
              "Name": "FieldPea",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report.Report, Models",
              "VariableNames": [
                "[Clock].Today",
                "[Clock].Today as Date",
                "[Weather].Latitude as Latitude",
                "[Weather].Longitude as Longitude",
                "[AuxSummary].Script.TagOutput as LocationID",
                "[Soil].Name as SoilName",
                "",
                "[RotationManager].Script.CurrentCrop as CurrentCrop",
                "[CropSowingManager].Script.CropName as SownCrop",
                "[CropHarvestManager].Script.CropName as HarvestedCrop",
                "([CropHarvestManager].Script.CropYield + [PastureHarvestManager].Script.RemovedWt) as CropYield",
                "",
                "[Weather].Rain as Rainfall",
                "[Irrigation].IrrigationApplied as IrrigationApplied",
                "[Soil].SoilWater.Es as Evaporation",
                "(sum([Sward].Ryegrass.WaterUptake) + sum([Sward].WhiteClover.WaterUptake) + [Wheat].Leaf.WaterAllocation + [Barley].Leaf.WaterAllocation + [Oats].Leaf.WaterAllocation + [FodderBeet].Leaf.WaterAllocation  + [FieldPea].Leaf.WaterAllocation) as WaterUptake",
                "[Soil].SoilWater.Runoff as Runoff",
                "[Soil].SoilWater.Drainage as Drainage",
                "sum([Soil].SoilWater.SWmm) as SoilWaterTotal",
                "sum([Soil].DULmm) as SoilDULTotal",
                "",
                "[Fertiliser].NitrogenApplied as FertiliserNApplied",
                "(sum([Soil].SoilNitrogen.dlt_n_min_res)+ sum([Soil].SoilNitrogen.MineralisedN)) as TotalNetMineralisedN",
                "sum([Soil].SoilNitrogen.dlt_n_min_res) as SurfOMMineralisedN",
                "sum([Soil].SoilNitrogen.MineralisedN) as SoilOMMineralisedN",
                "sum([Soil].SoilNitrogen.Denitrification) as TotalDenitrifiedN",
                "[Soil].SoilWater.LeachNO3 as TotalLeachedN",
                "([Sward].Ryegrass.SoilUptakeN + [Sward].WhiteClover.SoilUptakeN - [Wheat].Root.NUptake - [Barley].Root.NUptake - [Oats].Root.NUptake - [FodderBeet].Root.NUptake - [FieldPea].Root.NUptake) as NitrogenUptake",
                "sum([Soil].SoilNitrogen.Urea.kgha) as SoilUreaTotal",
                "sum([Soil].SoilNitrogen.NH4.kgha) as SoilNH4Total",
                "sum([Soil].SoilNitrogen.NO3.kgha) as SoilNO3Total",
                "[SurfaceOrganicMatter].N as SurfOMNTotal",
                "sum([Soil].SoilNitrogen.FOMN) as SoilFOMNTotal",
                "sum([Soil].SoilNitrogen.MicrobialN) as SoilMicrobialNTotal",
                "sum([Soil].SoilNitrogen.HumicN) as SoilHumicNTotal",
                "[CropsAutomaticFertiliser].Script.TopSoilMineralN as TopSoilMineralN",
                "[PastureHarvestManager].Script.NReturnedInUrine as UrineDepositedN",
                "[PastureHarvestManager].Script.NReturnedInDung as DungDepositedN",
                "[PastureHarvestManager].Script.ReturnedWt as DungDepositedWt",
                "[PastureHarvestManager].Script.ReturnedN as ExcretaDepositedN",
                "",
                "[Sward].AboveGroundWt as Pasture.AboveGroundWt",
                "[Sward].BelowGroundWt as Pasture.BelowGroundWt",
                "[Sward].HarvestedWt as Pasture.Biomass.HarvestedWt",
                "[Sward].AboveGroundN as Pasture.AboveGroundN",
                "[Sward].BelowGroundN as Pasture.BelowGroundN",
                "[Sward].HarvestedN as Pasture.HarvestedN",
                "[Sward].LAIGreen as Pasture.LAIGreen",
                "[PastureHarvestManager].Script.RemovedWt as Pasture.Yield",
                "[Sward].WhiteClover.AboveGroundLiveWt/([Sward].AboveGroundLiveWt+0.000001) as CloverContent",
                "",
                "[Wheat].Grain.Wt*10 as Wheat.GrainWt",
                "[Wheat].AboveGround.Wt*10 as Wheat.AboveGroundWt",
                "[Wheat].BelowGround.Wt*10 as Wheat.BelowGroundWt",
                "[Wheat].AboveGround.N*10 as Wheat.AboveGroundN",
                "[Wheat].BelowGround.N*10 as Wheat.BelowGroundN",
                "([Wheat].Leaf.Removed.Wt +[Wheat].Stem.Removed.Wt + [Wheat].Spike.Removed.Wt + [Wheat].Grain.Removed.Wt)*10 as Wheat.Biomass.HarvestedWt",
                "([Wheat].Leaf.Removed.N + [Wheat].Stem.Removed.N + [Wheat].Spike.Removed.N + [Wheat].Grain.Removed.N)*10 as Wheat.Biomass.HarvestedN",
                "[Wheat].Leaf.LAI as Wheat.LAIGreen",
                "[CropHarvestManager].Script.WheatYield as Wheat.Yield",
                "",
                "[Barley].Grain.Wt*10 as Barley.GrainWt",
                "[Barley].AboveGround.Wt*10 as Barley.AboveGroundWt",
                "[Barley].BelowGround.Wt*10 as Barley.BelowGroundWt",
                "[Barley].AboveGround.N*10 as Barley.AboveGroundN",
                "[Barley].BelowGround.N*10 as Barley.BelowGroundN",
                "([Barley].Leaf.Removed.Wt + [Barley].Stem.Removed.Wt + [Barley].Spike.Removed.Wt + [Barley].Grain.Removed.Wt)*10 as Barley.Biomass.HarvestedWt",
                "([Barley].Leaf.Removed.N + [Barley].Stem.Removed.N + [Barley].Spike.Removed.N + [Barley].Grain.Removed.N)*10 as Barley.Biomass.HarvestedN",
                "[Barley].Leaf.LAI as Barley.LAIGreen",
                "[CropHarvestManager].Script.BarleyYield as Barley.Yield",
                "",
                "[Oats].Grain.Wt*10 as Oats.GrainWt",
                "[Oats].AboveGround.Wt*10 as Oats.AboveGroundWt",
                "[Oats].BelowGround.Wt*10 as Oats.BelowGroundWt",
                "[Oats].AboveGround.N*10 as Oats.AboveGroundN",
                "[Oats].BelowGround.N*10 as Oats.BelowGroundN",
                "([Oats].Leaf.Removed.Wt + [Oats].Stem.Removed.Wt + [Oats].Panicle.Removed.Wt + [Oats].Grain.Removed.Wt)*10 as Oats.Biomass.HarvestedWt",
                "([Oats].Leaf.Removed.N + [Oats].Stem.Removed.N + [Oats].Panicle.Removed.N + [Oats].Grain.Removed.N)*10 as Oats.Biomass.HarvestedN",
                "[Oats].Leaf.LAI as Oats.LAIGreen",
                "[CropHarvestManager].Script.OatsYield as Oats.Yield",
                "",
                "[FodderBeet].AboveGround.Wt*10 as FodderBeet.AboveGroundWt",
                "[FodderBeet].BelowGround.Wt*10 as FodderBeet.BelowGroundWt",
                "[FodderBeet].AboveGround.N*10 as FodderBeet.AboveGroundN",
                "[FodderBeet].BelowGround.N*10 as FodderBeet.BelowGroundN",
                "([FodderBeet].Leaf.Removed.Wt + [FodderBeet].Petiole.Removed.Wt + [FodderBeet].StorageRoot.Removed.Wt)*10 as FodderBeet.Biomass.HarvestedWt",
                "([FodderBeet].Leaf.Removed.N + [FodderBeet].Petiole.Removed.N + [FodderBeet].StorageRoot.Removed.N)*10 as FodderBeet.Biomass.HarvestedN",
                "[FodderBeet].Leaf.LAI as FodderBeet.LAIGreen",
                "[CropHarvestManager].Script.FodderBeetYield as FodderBeet.Yield",
                "",
                "[FieldPea].Grain.Wt*10 as FieldPea.GrainWt",
                "[FieldPea].AboveGround.Wt*10 as FieldPea.AboveGroundWt",
                "[FieldPea].BelowGround.Wt*10 as FieldPea.BelowGroundWt",
                "[FieldPea].AboveGround.N*10 as FieldPea.AboveGroundN",
                "[FieldPea].BelowGround.N*10 as FieldPea.BelowGroundN",
                "([FieldPea].Leaf.Removed.Wt + [FieldPea].Stem.Removed.Wt + [FieldPea].Shell.Removed.Wt + [FieldPea].Grain.Removed.Wt + [FieldPea].Nodule.Removed.Wt + [FieldPea].Root.Removed.Wt)*10 as FieldPea.Biomass.HarvestedWt",
                "([FieldPea].Leaf.Removed.N + [FieldPea].Stem.Removed.N + [FieldPea].Shell.Removed.N + [FieldPea].Grain.Removed.N + [FieldPea].Nodule.Removed.N + [FieldPea].Root.Removed.N)*10 as FieldPea.Biomass.HarvestedN",
                "[FieldPea].Leaf.LAI as FieldPea.LAIGreen",
                "[CropHarvestManager].Script.FieldPeaYield as FieldPea.Yield",
                "",
                "[Wheat].Leaf.Fw",
                "[Wheat].Leaf.Fn",
                "[Barley].Leaf.Fw",
                "[Barley].Leaf.Fn",
                "[Oats].Leaf.Fw",
                "[Oats].Leaf.Fn",
                "[FodderBeet].Leaf.Fw",
                "[FodderBeet].Leaf.Fn",
                "[FieldPea].Leaf.Fw",
                "[FieldPea].Leaf.Fn",
                "([Sward].GlfWaterLogging*[Sward].GlfWaterSupply) as Pasture.Fw",
                "([Sward].GlfNContent*[Sward].GlfNSupply) as Pasture.Fn",
                "",
                "[SurfaceOrganicMatter].Wt as ResidueAmount",
                "[SurfaceOrganicMatter].Cover as ResidueCover",
                "",
                "[AuxSummary].Script.AccumRainfall as CumulativeRain",
                "[AuxSummary].Script.AccumIrrigation as CumulativeIrrigation",
                "[AuxSummary].Script.AccumDrainage as CumulativeDrainage",
                "[AuxSummary].Script.AccumFert as CumulativeFertiliser",
                "[AuxSummary].Script.AccumExcreta as CumulativeExcreta",
                "([AuxSummary].Script.AccumSurfOMMineralisation + [AuxSummary].Script.AccumTotalSoilOMMineralised) as CumulativeMineralisedN",
                "[AuxSummary].Script.AccumTotalDenitrifiedN as CumulativeDenitrifiedN",
                "([AuxSummary].Script.AccumTotalLeachedN as CumulativeLeachedN",
                "([AuxSummary].Script.AccumUptakeN as CumulativeNUptake"
              ],
              "EventNames": [
                "[Clock].EndOfDay"
              ],
              "Name": "Report",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Report.Report, Models",
              "VariableNames": [
                "[Clock].Today as Date",
                "[Weather].Latitude as Latitude",
                "[Weather].Longitude as Longitude",
                "[AuxSummary].Script.TagOutput as LocationID",
                "[Soil].Name as SoilName",
                "[RotationManager].Script.CurrentCrop as CurrentCrop",
                "([CropHarvestManager].Script.CropYield + [PastureHarvestManager].Script.RemovedWt) as CropYield",
                "[Soil].SoilWater.Runoff as Runoff",
                "[Soil].SoilWater.Drainage as Drainage",
                "sum([Soil].SoilNitrogen.Denitrification) as TotalDenitrifiedN",
                "[Soil].SoilWater.LeachNO3 as TotalLeachedN"
              ],
              "EventNames": [
                "[Clock].EndOfDay"
              ],
              "Name": "ReportIOM",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Folder, Models",
          "ShowPageOfGraphs": true,
          "Name": "Water",
          "Children": [
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 2,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "SoilWater",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilWaterTotal",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "SW",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilDULTotal",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "DUL",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "IrrigationApplied",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Irrigation",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "ET",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Evaporation",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Evaporation",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "WaterUptake",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Transpiration",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "SoilLosses",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Drainage",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Drainage",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Runoff",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Runoff",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "CumLosses",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Drainage",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": true,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Drainage",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Runoff",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": true,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Runoff",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Folder, Models",
          "ShowPageOfGraphs": true,
          "Name": "Nitrogen",
          "Children": [
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "SoilMinN",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilUreaTotal",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Urea",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilNH4Total",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "NH4",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilNO3Total",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "NO3",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16777216,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 2,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "TopSoilMineralN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "TopSoilMineralN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 2,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "SoilOrgN",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SurfOMNTotal",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "SurfOM",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -2793984,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilFOMNTotal",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FOM",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilMicrobialNTotal",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Microbial",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -16777216,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilHumicNTotal",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Humus",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 2,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "Inputs",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SurfOMMineralisedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "SurfOMMineralised",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -2793984,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "SoilOMMineralisedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "SoilOMMineralised",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -16777216,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FertiliserNApplied",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Fertiliser",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "DungDepositedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Dung",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "UrineDepositedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Urine",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "Outputs",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "NitrogenUptake",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Uptake",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "TotalDenitrifiedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Denitrification",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "TotalLeachedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Leaching",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Folder, Models",
          "ShowPageOfGraphs": true,
          "Name": "PlantWt",
          "Children": [
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "PlantWt",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Pasture.AboveGroundWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "PastureWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.AboveGroundWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.AboveGroundWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.AboveGroundWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FodderBeet.AboveGroundWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FodderBeetWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.AboveGroundWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "PlantN",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Pasture.AboveGroundN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "PastureN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.AboveGroundN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.AboveGroundN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.AboveGroundN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FodderBeet.AboveGroundN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FodderBeetN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.AboveGroundN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "PlantLAI",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Pasture.LAIGreen",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "PastureLAI",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.LAIGreen",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatLAI",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.LAIGreen",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyLAI",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.LAIGreen",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsLAI",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FodderBeet.LAIGreen",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FodderBeetLAI",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.LAIGreen",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaLAI",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "RemovedWt",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Pasture.Biomass.HarvestedWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "PastureWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.Biomass.HarvestedWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.Biomass.HarvestedWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.Biomass.HarvestedWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.Biomass.HarvestedWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FodderBeetWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.Biomass.HarvestedWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "GrainWt",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.GrainWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatGrainWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.GrainWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyGrainWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.GrainWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsGrainWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.GrainWt",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaGrainWt",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "CropYield",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Pasture.Yield",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "PastureYield",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.Yield",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatYield",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.Yield",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyYield",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.Yield",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsYield",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FodderBeet.Yield",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FodderBeetYield",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.Yield",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaYield",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "CloverContent",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CloverContent",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "CloverContent",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Folder, Models",
          "ShowPageOfGraphs": true,
          "Name": "StressFactors",
          "Children": [
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "Fw",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Pasture.Fw",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "PastureFw",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.Leaf.Fw",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatFw",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.Leaf.Fw",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyFw",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.Leaf.Fw",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsFw",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FodderBeet.Leaf.Fw",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FodderBeetFw",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.Leaf.Fw",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaFw",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 2,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "Fn",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Pasture.Fn",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "PastureFn",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Wheat.Leaf.Fn",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "WheatFn",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -3376729,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Barley.Leaf.Fn",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "BarleyFn",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "Oats.Leaf.Fn",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "OatsFn",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FodderBeet.Leaf.Fn",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FodderBeetFn",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -990142,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "FieldPea.Leaf.Fn",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "FieldPeaFn",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 2,
                  "ColourArgb": -16777216,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 2,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "TopSoilMineralN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "TopSoilMineralN",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Folder, Models",
          "ShowPageOfGraphs": true,
          "Name": "Residues",
          "Children": [
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": 500.0,
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "Amount",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -2793984,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "ResidueAmount",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Total",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": "",
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "Cover",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -2793984,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "ResidueCover",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Total",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Core.Folder, Models",
          "ShowPageOfGraphs": true,
          "Name": "Cumulatives",
          "Children": [
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "Water",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16747854,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeRain",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Rain",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeIrrigation",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Irrigation",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -2793984,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeDrainage",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Drainage",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "NInputs",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16777216,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeFertiliser",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Fertiliser",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -2793984,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeMineralisedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": false,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Mineralisation",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Graph, Models",
              "Caption": null,
              "Axis": [
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 0,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": false,
                  "CrossesAtZero": false
                },
                {
                  "$type": "Models.Graph.Axis, Models",
                  "Type": 3,
                  "Title": null,
                  "Inverted": false,
                  "Minimum": "NaN",
                  "Maximum": "NaN",
                  "Interval": "NaN",
                  "DateTimeAxis": true,
                  "CrossesAtZero": false
                }
              ],
              "LegendPosition": 1,
              "DisabledSeries": [],
              "Name": "NOutputs",
              "Children": [
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -16736653,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeNUptake",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": false,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Uptake",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -11094807,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeDenitrifiedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": true,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Denitrification",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                },
                {
                  "$type": "Models.Graph.Series, Models",
                  "Type": 1,
                  "XAxis": 3,
                  "YAxis": 0,
                  "ColourArgb": -1663232,
                  "FactorToVaryColours": null,
                  "FactorToVaryMarkers": null,
                  "FactorToVaryLines": null,
                  "Marker": 11,
                  "MarkerSize": 0,
                  "Line": 0,
                  "LineThickness": 0,
                  "Checkpoint": "Current",
                  "TableName": "Report",
                  "XFieldName": "Clock.Today",
                  "YFieldName": "CumulativeLeachedN",
                  "X2FieldName": null,
                  "Y2FieldName": null,
                  "ShowInLegend": true,
                  "IncludeSeriesNameInLegend": true,
                  "Cumulative": true,
                  "CumulativeX": false,
                  "Filter": null,
                  "Name": "Leaching",
                  "Children": [],
                  "IncludeInDocumentation": true,
                  "Enabled": true,
                  "ReadOnly": false
                }
              ],
              "IncludeInDocumentation": false,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": true,
          "Enabled": true,
          "ReadOnly": false
        },
        {
          "$type": "Models.Graph.Graph, Models",
          "Caption": null,
          "Axis": [
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 0,
              "Title": "",
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 3,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": true,
              "CrossesAtZero": false
            },
            {
              "$type": "Models.Graph.Axis, Models",
              "Type": 2,
              "Title": null,
              "Inverted": false,
              "Minimum": "NaN",
              "Maximum": "NaN",
              "Interval": "NaN",
              "DateTimeAxis": false,
              "CrossesAtZero": false
            }
          ],
          "LegendPosition": 1,
          "DisabledSeries": [],
          "Name": "PlantWt1",
          "Children": [
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16736653,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Pasture.AboveGroundWt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "PastureWt",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -1663232,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Wheat.AboveGroundWt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "WheatWt",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -3376729,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Barley.AboveGroundWt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "BarleyWt",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -11094807,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "Oats.AboveGroundWt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "OatsWt",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -16747854,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "FodderBeet.AboveGroundWt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FodderBeetWt",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 0,
              "ColourArgb": -990142,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "FieldPea.AboveGroundWt",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "FieldPeaWt",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            },
            {
              "$type": "Models.Graph.Series, Models",
              "Type": 1,
              "XAxis": 3,
              "YAxis": 2,
              "ColourArgb": -16777216,
              "FactorToVaryColours": null,
              "FactorToVaryMarkers": null,
              "FactorToVaryLines": null,
              "Marker": 11,
              "MarkerSize": 0,
              "Line": 0,
              "LineThickness": 0,
              "Checkpoint": "Current",
              "TableName": "Report",
              "XFieldName": "Clock.Today",
              "YFieldName": "FertiliserNApplied",
              "X2FieldName": null,
              "Y2FieldName": null,
              "ShowInLegend": true,
              "IncludeSeriesNameInLegend": true,
              "Cumulative": false,
              "CumulativeX": false,
              "Filter": null,
              "Name": "Fertiliser",
              "Children": [],
              "IncludeInDocumentation": true,
              "Enabled": true,
              "ReadOnly": false
            }
          ],
          "IncludeInDocumentation": false,
          "Enabled": true,
          "ReadOnly": false
        }
      ],
      "IncludeInDocumentation": true,
      "Enabled": true,
      "ReadOnly": false
    }
  ],
  "IncludeInDocumentation": true,
  "Enabled": true,
  "ReadOnly": false
}